{"version":3,"sources":["./src/app/services/rating.service.ts","./src/environments/environment.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/services/post.service.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/error-bar/error-bar.component.ts","./src/app/components/error-bar/error-bar.component.html","./src/app/app-constants.module.ts","./src/app/services/feed.service.ts","./src/models/identity/friend.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/profile-settings/profile-settings.component.ts","./src/app/components/profile-settings/profile-settings.component.html","./src/app/components/success-bar/success-bar.component.ts","./src/app/components/success-bar/success-bar.component.html","./src/app/components/post-attachment/post-attachment.component.ts","./src/app/components/post-attachment/post-attachment.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/admin-panel-page/admin-panel-page.component.ts","./src/app/components/admin-panel-page/admin-panel-page.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/models/comment.model.ts","./src/app/services/cloudinary.service.ts","./src/app/components/comment/comment.component.ts","./src/app/components/comment/comment.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/feed/feed.component.ts","./src/app/components/feed/feed.component.html","./src/models/identity/user.model.ts","./src/app/services/language.service.ts","./src/app/services/comment.service.ts","./src/models/post.model.ts","./src/app/components/loading/loading.component.ts","./src/app/components/loading/loading.component.html","./src/app/services/user.service.ts","./src/app/services/token.service.ts","./src/app/components/post-page/post-page.component.ts","./src/app/components/post-page/post-page.component.html","./src/app/app-routing.module.ts","./src/app/services/technology.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RatingService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  createRatingWithSessionStorageRequest(postId: Guid, isLike: boolean): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.createRatingRequest(userId, token, postId, isLike);\n  }\n\n  putRatingWithSessionStorageRequest(postId: Guid, isLike: boolean): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putRatingRequest(userId, token, postId, isLike);\n  }\n\n  getRatingByUserAndPostWithSessionStorageRequest(postId: Guid): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.getRatingByUserAndPostRequest(userId, token, postId);\n  }\n\n  deleteRatingFromSessionStorageRequest(ratingId: Guid): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deleteRatingRequest(userId, token, ratingId);\n  }\n\n  createRatingRequest(userId: Guid, authToken: string, postId: Guid, isLike: boolean): Observable<object>  {\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    const body = {\n      postId: postId.toString(),\n      isLike: isLike\n    };\n\n    return this._http.post(AppConstants.API_RATING_URL, body, options);\n  }\n\n  putRatingRequest(userId: Guid, authToken: string, postId: Guid, isLike: boolean): Observable<object> {\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()).set('PostId', postId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    const body = {\n      isLike: isLike\n    };\n\n    return this._http.put(AppConstants.API_RATING_URL, body, options);\n  }\n\n  getRatingByUserAndPostRequest(userId: Guid, authToken: string, postId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()).set('PostId', postId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n\n    return this._http.get(AppConstants.API_RATING_URL + '/GetByUserAndPost', options);\n  }\n\n  deleteRatingRequest(userId: Guid, authToken: string, ratingId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()).set('RatingId', ratingId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n\n    return this._http.delete(AppConstants.API_RATING_URL, options);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/models/identity/user.model';\nimport { AppConstants } from 'src/app/app-constants.module';\nimport { Location } from '@angular/common';\nimport { LanguageService } from 'src/app/services/language.service';\nimport { TechnologyService } from 'src/app/services/technology.service';\nimport { Post } from 'src/models/post.model';\nimport { FeedService } from 'src/app/services/feed.service';\nimport { TokenService } from 'src/app/services/token.service';\nimport { Title } from '@angular/platform-browser';\nimport { Friend } from 'src/models/identity/friend.model';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  private _title = 'Profile';\n  private _urlUsername: string;\n  private _timeLoaded: string;\n  private _currentPage: number;\n  public isTheLoggedInUser = false;\n  public isUserLoggedIn = false;\n  public isAdminUser = false;\n  public dataArrived = false;\n  public friendOfUser = false;\n  public updatingFriendship = false;\n  public user: User;\n  public userPosts: Post[];\n  public updateFrienship: FormGroup;\n\n  constructor(private _titleService: Title, private _fb: FormBuilder, private _router: Router, private _userService: UserService, private _languageService: LanguageService, private _technologyService: TechnologyService, private _feedService: FeedService, private _location: Location, private _tokenService: TokenService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    this._urlUsername = this._router.url.substring(9);\n\n    const now = new Date();\n    now.setHours(now.getHours() + 2); // accounting for eastern europe timezone\n    this._timeLoaded = now.toISOString();\n    this._currentPage = 1;\n\n    this.user = this._userService.getDefaultUser();\n    this.userPosts = [];\n\n    this.updateFrienship = this._fb.group({\n      password: new FormControl('')\n    });\n\n    this._userService.getUserByUsernameRequest(this._urlUsername).subscribe({\n      next: (res: object) => {\n        Object.assign(this.user, res);\n        this.isAdminUser = this.user.roles.map(x => x.name).includes(AppConstants.ADMIN_ROLE_NAME);\n        this.loadLanguages();\n      },\n      error: () => {\n        this._router.navigate(['/not-found']);\n      }\n    });\n  }\n\n  private loadLanguages(): void {\n    if (this.user.languages.length > 0) {\n      // When user has languages, get their names and load technologies\n      this._languageService.getFullLanguagesFromIncomplete(this.user.languages).then(value => {\n        this.user.languages = value;\n        this.loadTechnologies();\n      });\n    }\n    else {\n      this.loadTechnologies();\n    }\n  }\n\n  private loadTechnologies(): void {\n    if (this.user.technologies.length > 0) {\n      // When user has technologies, get their names and then load posts\n      this._technologyService.getFullTechnologiesFromIncomplete(this.user.technologies).then(value => {\n        this.user.technologies = value;\n        this.loadPosts();\n      });\n    }\n    else {\n      this.loadPosts();\n    }\n  }\n\n  private loadPosts(): void {\n    this._feedService.getUserPostsRequest(this.user.userName, this._currentPage++, this._timeLoaded, AppConstants.PAGE_SIZE).subscribe({\n      next: (result: object) => {\n        const resultArr: Post[] = Object.values(result)[0];\n        this.userPosts.push(...resultArr);\n        this.finishUserLoading();\n      },\n      error: () => {\n        this._currentPage = -1;\n        this.finishUserLoading();\n      }\n    });\n  }\n\n  private finishUserLoading(): void {\n    if (sessionStorage.getItem('UserCred')) {\n      this.isUserLoggedIn = true;\n      const userFromToken: User = this._userService.getDefaultUser();\n\n      this._userService.getUserFromSessionStorageRequest().subscribe({\n        next: (tokenRes: object) => {\n          Object.assign(userFromToken, tokenRes);\n\n          if (userFromToken.friends.map(x => x.userName).includes(this._urlUsername)) {\n            this.friendOfUser = true;\n          }\n          if (userFromToken.userName === this._urlUsername) {\n            this.isTheLoggedInUser = true;\n          }\n          this.dataArrived = true;\n        },\n        error: () => {\n          this.logout();\n        }\n      });\n    }\n    else {\n      this.dataArrived = true;\n    }\n  }\n\n  logout(): void {\n    this._tokenService.logoutUserFromSessionStorage();\n\n    // Reload the page\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n\n  modifyFriend(): void {\n    if (this.updatingFriendship) {\n      this.dataArrived = false;\n\n      this._userService.getUserFromSessionStorageRequest().subscribe({\n        next: (result: object) => {\n          const loggedInUser: User = result as User;\n\n          if (this.friendOfUser) {\n            loggedInUser.friends = loggedInUser.friends.filter(x => x.userName !== this.user.userName);\n          }\n          else {\n            const newFriend = new Friend();\n            newFriend.userName = this.user.userName;\n            loggedInUser.friends.push(newFriend);\n          }\n\n          this.updateUserWithNewFriends(loggedInUser);\n        }\n      });\n    }\n    this.updatingFriendship = !this.updatingFriendship;\n  }\n\n  private updateUserWithNewFriends(loggedInUser: User): void {\n    this._userService.putBareUserFromSessionStorageRequest(loggedInUser, this.updateFrienship.get('password')?.value).subscribe({\n      next: () => {\n        this.reloadPage();\n      },\n      error: () => {\n        this._router.navigate(['/']);\n      }\n    });\n  }\n\n  onScroll(event: any): void {\n    // Detects when the element has reached the bottom, thx https://stackoverflow.com/a/50038429/12036073\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight && this._currentPage > 0) {\n      this.loadPosts();\n    }\n  }\n\n  private reloadPage(): void {\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n}\n","<app-navbar></app-navbar>\n\n<app-loading *ngIf=\"!dataArrived\"></app-loading>\n\n<main class=\"scroll-standalone under-navbar flex-col centered-content\" *ngIf=\"dataArrived\" (scroll)=\"onScroll($event)\">\n\t<section id=\"user-info\" class=\"card flex-row width-full flex-justify-center\">\n\t\t<div>\n\t\t\t<img id=\"profile-picture\" class=\"round-image\" [src]=\"user.profilePictureURL\">\n\t\t</div>\n\t\t<div class=\"flexible flex-col flex-center-align-items flex-justify-center side-padding-dot3\">\n\t\t\t<div class=\"text-centered\">\n\t\t\t\t{{ user.firstName }} {{ user.lastName }}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t@{{ user.userName }}\n\t\t\t</div>\n\t\t\t<form class=\"flex-row flexible-children width-full font-size-dot7 margin-top-dot4\" [formGroup]=\"updateFrienship\" (ngSubmit)=\"modifyFriend()\" *ngIf=\"!isTheLoggedInUser && isUserLoggedIn\">\n\t\t\t\t<input class=\"border-faded-slim border-bottom-only margin-right-dot2\" type=\"password\" formControlName=\"password\" *ngIf=\"updatingFriendship\" placeholder=\"Type in password to confirm\">\n\t\t\t\t<button id=\"add-friend\" type=\"submit\" class=\"border-faded-slim padding-dot1 lighter-hover click-effect border-radius-dot3 width-full\">\n\t\t\t\t\t{{ updatingFriendship ? 'Confirm' : (friendOfUser ? 'Unfriend' : 'Add friend') }}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t</section>\n\t<section class=\"card sec-info-card flex-col width-full\">\n\t\t<div class=\"sec-info-title border-faded-slim border-bottom-only\">\n\t\t\tLanguages\n\t\t</div>\n\t\t<div class=\"none-message\" *ngIf=\"user.languages.length === 0\">\n\t\t\tNone\n\t\t</div>\n\t\t<div class=\"flex-row\" *ngFor=\"let lang of user.languages\">\n\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t{{ lang.name }}\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\t<section class=\"card sec-info-card flex-col width-full\">\n\t\t<div class=\"sec-info-title border-faded-slim border-bottom-only\">\n\t\t\tTechnologies\n\t\t</div>\n\t\t<div class=\"none-message\" *ngIf=\"user.technologies.length === 0\">\n\t\t\tNone\n\t\t</div>\n\t\t<div  class=\"flex-row\" *ngFor=\"let tech of user.technologies\">\n\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t{{ tech.name }}\n\t\t\t</div>\n\t\t</div>\n\t</section>\n\t<hr class=\"card-hr\">\n\t<section>\n\t\t<div class=\"text-centered\" *ngIf=\"userPosts.length === 0\">\n\t\t\t{{ user.firstName }} {{ user.lastName }} hasn't posted anything yet!\n\t\t</div>\n\t\t<div *ngFor=\"let userPost of userPosts\">\n\t\t\t<app-post [paramId]=\"userPost.postId.toString()\"></app-post>\n\t\t</div>\n\t</section>\n</main>\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as FormData from 'form-data';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { Post } from 'src/models/post.model';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  getDefaultPost(): Post {\n    return new Post(Guid.createEmpty(), '', '', '', '', new Date(), [], [], 0);\n  }\n\n  /* Requests from session storage */\n\n  createPostWithSessionStorageRequest(postMessage: string, files: File[]): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.createPostRequest(userId, token, postMessage, files);\n  }\n\n  putPostWithSessionStorageRequest(postId: Guid, newMessage: string, posts: File[]): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putPostRequest(userId, token, postId, newMessage, posts);\n  }\n\n  deletePostWithSessionStorage(postId: Guid): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deletePostRequest(postId, token);\n  }\n\n  /* Post requests */\n\n  createPostRequest(userId: Guid, authToken: string, postMessage: string, files: File[]): Observable<object> {\n    const form = new FormData();\n    form.append('message', postMessage);\n    for (const file of files) {\n      form.append('files', file, file.name);\n    }\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_POST_URL, form, options);\n  }\n\n  getPostRequest(id: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', id.toString())\n    };\n    return this._http.get(AppConstants.API_POST_URL, options);\n  }\n\n  putPostRequest(userId: Guid, authToken: string, postId: Guid, newMessage: string, files: File[]): Observable<object> {\n    const form = new FormData();\n    form.append('postId', postId);\n    form.append('newMessage', newMessage);\n    for (const file of files) {\n      form.append('files', file, file.name);\n    }\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_POST_URL, form, options);\n  }\n\n  deletePostRequest(postId: Guid, authToken: string): Observable<object> {\n    const options = {\n      params: new HttpParams().set('PostId', postId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.delete(AppConstants.API_POST_URL, options);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n  private _title = 'Not Found!';\n\n  constructor(private _titleService: Title, private _router: Router) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n  }\n\n  backToFeed(): void {\n    this._router.navigate(['/']);\n  }\n\n  backToLogin(): void {\n    this._router.navigate(['/login']);\n  }\n}\n","<main class=\"centered-content flex-col flex-center-align-items flex-justify-center height-full\">\n\t<div class=\"card width-full padding-dot6\">\n\t\t<summary class=\"title\">\n\t\t\tPage not found!\n\t\t</summary>\n\t\t<hr class=\"card-hr\">\n\t\t<nav class=\"flex-row flexible-children padding-dot2\">\n\t\t\t<button class=\"flex-row flex-justify-center flex-center-align-items border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 margin-right-dot2\" (click)=\"backToFeed()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-home.svg\">\n\t\t\t\t&nbsp;Back to feed\n\t\t\t</button>\n\t\t\t<button class=\"flex-row flex-justify-center flex-center-align-items border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" (click)=\"backToLogin()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-login.svg\">\n\t\t\t\t&nbsp;Back to login\n\t\t\t</button>\n\t\t</nav>\n\t</div>\n</main>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { IApiError } from 'src/interfaces/api-error';\n\n@Component({\n  selector: 'app-error-bar',\n  templateUrl: './error-bar.component.html',\n  styleUrls: ['./error-bar.component.css']\n})\nexport class ErrorBarComponent implements OnInit {\n  public errorMsg = '';\n\n  constructor()\n  { }\n\n  ngOnInit(): void {\n    this.hideError();\n  }\n\n  showError(error: HttpErrorResponse): void {\n    const test: IApiError = {\n      type: '',\n      title: 'Error!',\n      status: 0,\n      traceId: ''\n    };\n    Object.assign(test, error.error);\n    this.errorMsg = test.title;\n  }\n\n  hideError(): void {\n    this.errorMsg = '';\n  }\n}\n","<div id=\"error-bar\">{{errorMsg}}</div>\n","export class AppConstants {\n  public static BASE_API_URL = 'http://localhost:5000/api';\n\n  public static API_USER_URL = AppConstants.BASE_API_URL + '/User';\n  public static API_USER_LOGIN_URL = AppConstants.API_USER_URL + '/login';\n  public static API_USER_REGISTER_URL = AppConstants.API_USER_URL + '/register';\n\n  public static API_LANGUAGE_URL = AppConstants.BASE_API_URL + '/Language';\n  public static API_TECHNOLOGY_URL = AppConstants.BASE_API_URL + '/Technology';\n\n  public static API_POST_URL = AppConstants.BASE_API_URL + '/Post';\n  public static API_RATING_URL = AppConstants.BASE_API_URL + '/Rating';\n  public static API_FEED_URL = AppConstants.BASE_API_URL + '/Feed';\n  public static API_COMMENT_URL = AppConstants.BASE_API_URL + '/Comment';\n\n  public static PAGE_SIZE = 10;\n  public static FALLBACK_PROFILE_ICON = 'assets/icons/tabler-icon-user.svg';\n\n  public static SESSION_TOKEN_KEY = 'UserCred';\n  public static ADMIN_ROLE_NAME = 'Admin';\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  /* Requests from session storage */\n\n  getUserFeedFromSessionStorageRequest(pageNumber: number, firstTimeIssued: string, pageSize: number): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n\n    return this.getUserFeedRequest(userId, token, pageNumber, firstTimeIssued, pageSize);\n  }\n\n  /* Feed requests */\n\n  getUserFeedRequest(userId: Guid, authToken: string, pageNumber: number, firstTimeIssued: string, pageSize: number): Observable<object> {\n    const body = {\n      pageNumber: pageNumber,\n      firstPageTimeIssued: firstTimeIssued,\n      pageSize: pageSize\n    };\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_FEED_URL + '/GetPosts', body, options);\n  }\n\n  getUserPostsRequest(userName: string, pageNumber: number, firstTimeIssued: string, pageSize: number): Observable<object> {\n    const body = {\n      pageNumber: pageNumber,\n      firstPageTimeIssued: firstTimeIssued,\n      pageSize: pageSize\n    };\n    const options = {\n      params: new HttpParams().set('UserName', userName)\n    };\n    return this._http.post(AppConstants.API_FEED_URL + '/GetUserPosts', body, options);\n  }\n}\n","export class Friend {\n  public userName: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","<div class=\"main\">\n\t<router-outlet></router-outlet>\n</div>\n","import { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LanguageService } from 'src/app/services/language.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { TechnologyService } from 'src/app/services/technology.service';\nimport { User } from 'src/models/identity/user.model';\nimport { ErrorBarComponent } from '../error-bar/error-bar.component';\nimport { SuccessBarComponent } from '../success-bar/success-bar.component';\nimport { Language } from 'src/models/language.model';\nimport { Technology } from 'src/models/technology.model';\nimport { TokenService } from 'src/app/services/token.service';\nimport { Title } from '@angular/platform-browser';\nimport { AppConstants } from 'src/app/app-constants.module';\n\n@Component({\n  selector: 'app-profile-settings',\n  templateUrl: './profile-settings.component.html',\n  styleUrls: ['./profile-settings.component.css']\n})\nexport class ProfileSettingsComponent implements OnInit {\n  private _title = 'Profile Settings';\n  @ViewChild(ErrorBarComponent) private _errorBar: ErrorBarComponent;\n  @ViewChild(SuccessBarComponent) private _successBar: SuccessBarComponent;\n  private _urlUsername: string;\n  public isAdminUser = false;\n  public dataArrived = false;\n  public deleteAccountConfirm = false;\n  public showLanguages = false;\n  public showTechnologies = false;\n  public updateUserFormGroup: FormGroup;\n  public updateProfilePictureFormGroup: FormGroup;\n  public newProfilePicture: File;\n  public user: User;\n  public availableLanguages: Language[];\n  public availableTechnologies: Technology[];\n\n  constructor(private _titleService: Title, private _router: Router, private _userService: UserService, private _languageService: LanguageService, private _technologyService: TechnologyService, private _tokenService: TokenService, private _fb: FormBuilder, private _location: Location) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    this._urlUsername = this._router.url.substring(9);\n    this._urlUsername = this._urlUsername.substring(0, this._urlUsername.length - 9);\n\n    this.user = this._userService.getDefaultUser();\n    this.availableLanguages = [];\n    this.availableTechnologies = [];\n    this.newProfilePicture = new File([], '');\n\n    // Initializing forms with blank (default) values\n    this.updateUserFormGroup = this._fb.group({\n      firstName: new FormControl(''),\n      lastName: new FormControl(''),\n      username: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl(''),\n      languageInput: new FormControl(''),\n      languages: new FormControl(''),\n      technologyInput: new FormControl(''),\n      technologies: new FormControl('')\n    });\n    this.updateProfilePictureFormGroup = this._fb.group({\n      fileUpload: new FormControl('')\n    });\n\n\n    this._userService.getUserByUsernameRequest(this._urlUsername).subscribe({\n      next: (res: object) => {\n        Object.assign(this.user, res);\n        this.isAdminUser = this.user.roles.map(x => x.name).includes(AppConstants.ADMIN_ROLE_NAME);\n        this.finishUserLoading();\n      },\n      error: () => {\n        this._router.navigate(['/not-found']);\n      }\n    });\n\n    this._languageService.getAllLanguagesWithSessionStorageRequest().subscribe({\n      next: (result: object) => {\n        this.availableLanguages = result as Language[];\n      }\n    });\n    this._technologyService.getAllTechnologiesWithSessionStorageRequest().subscribe({\n      next: (result: object) => {\n        this.availableTechnologies = result as Technology[];\n      }\n    });\n  }\n\n  private finishUserLoading(): void {\n    if (sessionStorage.getItem('UserCred')) {\n      const userFromToken: User = this._userService.getDefaultUser();\n\n      this._userService.getUserFromSessionStorageRequest().subscribe({\n        next: (tokenRes: object) => {\n          Object.assign(userFromToken, tokenRes);\n\n          if (userFromToken.userName === this._urlUsername) {\n            this.initForms();\n            this.dataArrived = true;\n          }\n          else {\n            this.goToProfile();\n          }\n        },\n        error: () => {\n          this.logout();\n        }\n      });\n    }\n    else {\n      this.goToProfile();\n    }\n  }\n\n  private initForms(): void {\n    this.updateUserFormGroup = this._fb.group({\n      firstName: new FormControl(this.user.firstName, [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      lastName: new FormControl(this.user.lastName, [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      username: new FormControl(this.user.userName, [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      email: new FormControl(this.user.email, [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.pattern('.*[0-9].*') // Check if password contains atleast one number\n      ]),\n\n      // For language we have two different controls,\n      // the first one is used for input, the other one for sending data\n      // because if we edit the control for input,\n      // we're also gonna change the input field in the HTML\n      languageInput: new FormControl(''), // The one for input\n      languages: new FormControl(''), // The one that is sent\n\n      // For technologies it's the same as it is with languages\n      technologyInput: new FormControl(''),\n      technologies: new FormControl('')\n    });\n\n    this.getLanguagesForShowing().then(value => {\n        this.updateUserFormGroup.patchValue({ languageInput : value });\n    });\n\n    this.getTechnologiesForShowing().then(value => {\n      this.updateUserFormGroup.patchValue({ technologyInput : value });\n    });\n\n    this.updateProfilePictureFormGroup = this._fb.group({\n      fileUpload: new FormControl('')\n    });\n\n    this.updateUserFormGroup.valueChanges.subscribe({\n      next: () => {\n        this._successBar?.hideMsg();\n        this._errorBar?.hideError();\n      }\n    });\n  }\n\n  private getLanguagesForShowing(): Promise<string> {\n    return new Promise(resolve => {\n      this._languageService.getFullLanguagesFromIncomplete(this.user.languages).then(value => {\n        this.user.languages = value;\n        resolve(value.map(x => x.name).join(' '));\n      });\n    });\n  }\n\n  private getTechnologiesForShowing(): Promise<string> {\n    return new Promise(resolve => {\n      this._technologyService.getFullTechnologiesFromIncomplete(this.user.technologies).then(value => {\n        this.user.technologies = value;\n        resolve(value.map(x => x.name).join(' '));\n      });\n    });\n  }\n\n  onFileUpload(event: any): void {\n    this.newProfilePicture = event.target.files[0];\n  }\n\n  updateProfilePicture(): void {\n    if (this.newProfilePicture.size === 0) {\n      return;\n    }\n\n    this._userService.putProfilePictureFromSessionStorageRequest(this.newProfilePicture).subscribe({\n      next: () => {\n        this.reloadPage();\n      }\n    });\n    this.dataArrived = false;\n  }\n\n  onSubmit(): void {\n    this._successBar.hideMsg();\n    this._errorBar.hideError();\n\n    this.patchLanguagesControl();\n    this.patchTechnologiesControl();\n\n    this._userService.putUserFromSessionStorageRequest(this.updateUserFormGroup, this.user.roles, this.user.friends).subscribe({\n        next: () => {\n          this._successBar.showMsg('Profile updated successfully!');\n\n          // \"Reload\" page when changing username\n          const newUsername = this.updateUserFormGroup.get('username')?.value;\n          if (newUsername !== this._urlUsername) {\n            this._router.navigate(['/profile/' + newUsername + '/settings']);\n          }\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n    });\n  }\n\n  private patchLanguagesControl(): void {\n    // Get user input\n    const langControl = this.updateUserFormGroup.get('languageInput')?.value as string ?? '';\n\n    if (langControl === '') {\n      // Add the data to the form (to the value that is going to be sent)\n      this.updateUserFormGroup.patchValue({\n        languages : []\n      });\n    }\n    else {\n      const names = langControl.split(' ');\n\n      // Transfer user input to objects of type { \"name\": \"value\" }\n      const actualLanguages = [];\n      for (const lName of names) {\n        if (lName !== '') {\n          actualLanguages.push({ name : lName });\n        }\n      }\n\n      // Add the data to the form (to the value that is going to be sent)\n      this.updateUserFormGroup.patchValue({\n        languages : actualLanguages\n      });\n    }\n  }\n\n  private patchTechnologiesControl(): void {\n    // Get user input\n    const techControl = this.updateUserFormGroup.get('technologyInput')?.value as string ?? '';\n\n    if (techControl === '') {\n      // Add the data to the form (to the value that is going to be sent)\n      this.updateUserFormGroup.patchValue({\n        technologies : []\n      });\n    }\n    else {\n      const names = techControl.split(' ');\n\n      // Transfer user input to objects of type { \"name\": \"value\" }\n      const actualTechnologies = [];\n      for (const tName of names) {\n        if (tName !== '') {\n          actualTechnologies.push({ name : tName });\n        }\n      }\n\n      // Add the data to the form (to the value that is going to be sent)\n      this.updateUserFormGroup.patchValue({\n        technologies : actualTechnologies\n      });\n    }\n  }\n\n  goToProfile(): void {\n    this._router.navigate([this._router.url.substring(0, this._router.url.length - 9)]);\n  }\n\n  goToAdminPanel(): void {\n    this._router.navigate(['/admin-panel']);\n  }\n\n  logout(): void {\n    this._tokenService.logoutUserFromSessionStorage();\n    this._router.navigate(['/login']);\n  }\n\n  toggleLanguages(): void {\n    this.showLanguages = !this.showLanguages;\n  }\n\n  toggleTechnologies(): void {\n    this.showTechnologies = !this.showTechnologies;\n  }\n\n  deleteAccount(): void {\n    if (this.deleteAccountConfirm) {\n      this._userService.deleteUserFromSessionStorageRequest().subscribe({\n        next: () => {\n          this.logout();\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n      this.dataArrived = false;\n    }\n    else {\n      this.deleteAccountConfirm = true;\n    }\n  }\n\n  private reloadPage(): void {\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n}\n","<app-navbar></app-navbar>\n\n<app-loading *ngIf=\"!dataArrived\"></app-loading>\n\n<main class=\"scroll-standalone under-navbar centered-content flex-col\">\n\t<section class=\"card width-full\" *ngIf=\"this.isAdminUser\">\n\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" (click)=\"goToAdminPanel()\">\n\t\t\tGo to admin panel\n\t\t</button>\n\t</section>\n\t<form class=\"flex-row card width-full font-size-dot9 margin-top-bot-dot7\" [formGroup]=\"updateProfilePictureFormGroup\" (ngSubmit)=\"updateProfilePicture()\">\n\t\t<img id=\"profile-picture\" class=\"round-image\" [src]=\"user.profilePictureURL\">\n\t\t<section class=\"flexible flex-col flex-center-align-items flex-justify-center padding-side-font\">\n\t\t\t<input class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" type=\"file\" accept=\"image/*\" formControlName=\"fileUpload\" (change)=\"onFileUpload($event)\">\n\t\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 margin-top-dot4\" type=\"submit\" *ngIf=\"newProfilePicture.size > 0\">\n\t\t\t\tUpdate profile picture\n\t\t\t</button>\n\t\t</section>\n\t</form>\n\t<form class=\"flex-col card width-full padding-dot6\" [formGroup]=\"updateUserFormGroup\" (ngSubmit)=\"onSubmit()\">\n\t\t<section class=\"flex-col\">\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<label class=\"flexible fg-focus\">First Name</label>\n\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('firstName')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('firstName')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"firstName\" required>\n\t\t</section>\n\t\t<section class=\"flex-col\">\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<label class=\"flexible fg-focus\">Last Name</label>\n\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('lastName')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('lastName')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"lastName\" required>\n\t\t</section>\n\t\t<section class=\"flex-col\">\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<label class=\"flexible fg-focus\">Username</label>\n\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('username')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('username')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"username\" required>\n\t\t</section>\n\t\t<section class=\"flex-col\">\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<label class=\"flexible fg-focus\">Email</label>\n\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('email')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('email')?.errors?.email\" class=\"error\">*Invalid email</label>\n\t\t\t</div>\n\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"email\" required>\n\t\t</section>\n\t\t<section class=\"flex-col\">\n\t\t\t<div class=\"flex-row\">\n\t\t\t\t<label class=\"flexible fg-focus\">Password</label>\n\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('password')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('password')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t\t<label *ngIf=\"updateUserFormGroup.get('password')?.errors?.pattern\" class=\"error\">*At least 1 number</label>\n\t\t\t</div>\n\t\t\t<input type=\"password\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"password\" required>\n\t\t</section>\n\t\t<button type=\"button\" class=\"fg-focus width-full border-faded-slim padding-dot3 lighter-hover click-effect margin-top-dot4\" (click)=\"toggleLanguages()\">\n\t\t\t▼ Edit Languages ▼\n\t\t</button>\n\t\t<section *ngIf=\"showLanguages\">\n\t\t\t<div class=\"margin-top-dot5\">\n\t\t\t\t<label class=\"error\">\n\t\t\t\t\tType in your desired languages, separated by a space\n\t\t\t\t</label>\n\t\t\t\t<input class=\"fancy-input width-full border-faded-slim border-bottom-only\" type=\"text\" placeholder=\"You have no selected languages!\" formControlName=\"languageInput\" required>\n\t\t\t</div>\n\t\t\t<div class=\"none-message\" *ngIf=\"availableLanguages.length === 0\">\n\t\t\t\tNo languages available!\n\t\t\t</div>\n\t\t\t<div *ngIf=\"availableLanguages.length > 0\">\n\t\t\t\tAvailable languages:\n\t\t\t</div>\n\t\t\t<div class=\"flex-row margin-top-dot4\" *ngFor=\"let lang of availableLanguages\">\n\t\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t\t{{ lang.name }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<button type=\"button\" class=\"fg-focus width-full border-faded-slim padding-dot3 lighter-hover click-effect margin-top-dot4\" (click)=\"toggleTechnologies()\">\n\t\t\t▼ Edit Technologies ▼\n\t\t</button>\n\t\t<section *ngIf=\"showTechnologies\">\n\t\t\t<div class=\"margin-top-dot5\">\n\t\t\t\t<label class=\"error\">\n\t\t\t\t\tType in your desired technologies, separated by a space\n\t\t\t\t</label>\n\t\t\t\t<input class=\"fancy-input width-full border-faded-slim border-bottom-only\" type=\"text\" placeholder=\"You have no selected technologies!\" formControlName=\"technologyInput\" required>\n\t\t\t</div>\n\t\t\t<div class=\"none-message\" *ngIf=\"availableTechnologies.length === 0\">\n\t\t\t\tNo technologies available!\n\t\t\t</div>\n\t\t\t<div *ngIf=\"availableTechnologies.length > 0\">\n\t\t\t\tAvailable technologies:\n\t\t\t</div>\n\t\t\t<div class=\"flex-row margin-top-dot4\" *ngFor=\"let tech of availableTechnologies\">\n\t\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t\t{{ tech.name }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"margin-top-bot-dot3\">\n\t\t\t<app-success-bar></app-success-bar>\n\t\t\t<app-error-bar></app-error-bar>\n\t\t</section>\n\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" type=\"submit\">\n\t\t\tUpdate profile\n\t\t</button>\n\t</form>\n\t<section class=\"card width-full\">\n\t\t<div class=\"margin-bot-dot5 text-centered fg-error\" *ngIf=\"deleteAccountConfirm\">\n\t\t\tAre you sure you want to delete your account?<br>This is permanent!\n\t\t</div>\n\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 fg-error\" (click)=\"deleteAccount()\">\n\t\t\tDelete account\n\t\t</button>\n\t</section>\n\t</main>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success-bar',\n  templateUrl: './success-bar.component.html',\n  styleUrls: ['./success-bar.component.css']\n})\nexport class SuccessBarComponent implements OnInit {\n  public successMsg = '';\n\n  constructor()\n  { }\n\n  ngOnInit(): void {\n    this.hideMsg();\n  }\n\n  showMsg(msg?: string | undefined): void {\n    if (msg === undefined) {\n      this.successMsg = 'Success!';\n    }\n    else if (msg.trim() === '') {\n      this.successMsg = 'Success!';\n    }\n    else {\n      this.successMsg = msg;\n    }\n  }\n\n  hideMsg(): void {\n    this.successMsg = '';\n  }\n}\n","<div id=\"success-bar\">{{successMsg}}</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-attachment',\n  templateUrl: './post-attachment.component.html',\n  styleUrls: ['./post-attachment.component.css']\n})\nexport class PostAttachmentComponent implements OnInit {\n  @Input() paramURL: string;\n  public isImage = false;\n  public showFull = false;\n  public fileName: string;\n  public fileType: string;\n\n  constructor()\n  { }\n\n  ngOnInit(): void {\n    this.isImage = this.paramURL.includes('image') && !this.paramURL.endsWith('pdf');\n    this.fileType = this.isImage ? 'img' : 'raw';\n    if (this.fileType === 'img') {\n      this.fileName = this.paramURL.match(/(?!\\/)+?[^\\/]+?(?=\\.)/g)?.pop() ?? 'Attachment';\n    }\n    else {\n      this.fileName = this.paramURL.match(/[^\\/]+?$/g)?.pop() ?? 'Attachment';\n    }\n  }\n\n  toggleShowFull(): void {\n    this.showFull = !this.showFull;\n  }\n}\n","<figure class=\"form-attachment border-faded-slim flexible flex-row flex-no-wrap padding-dot2 hover-half-opacity margin-top-bot-dot2\" (click)=\"toggleShowFull()\">\n\t<div class=\"flex-col flex-justify-center margin-right-dot2\" [ngSwitch]=\"fileType\">\n\t\t<img *ngSwitchCase=\"'img'\" src=\"/assets/icons/tabler-icon-photo.svg\">\n\t\t<img *ngSwitchDefault src=\"/assets/icons/tabler-icon-file.svg\">\n\t</div>\n\t<summary class=\"flex-col flex-justify-center\">\n\t\t{{ fileName }}\n\t</summary>\n</figure>\n\n<div class=\"show-full-attachment flex-row flex-justify-center flex-center-align-items\" *ngIf=\"showFull\" (click)=\"toggleShowFull()\">\n\t<img class=\"attachment-img\" *ngIf=\"isImage\" src=\"{{paramURL}}\">\n\t<a class=\"attachment-download border-faded-slim padding-dot4 hover-half-opacity click-effect border-radius-dot3\" *ngIf=\"!isImage\" href=\"{{paramURL}}\">\n\t\tDownload attachment\n\t</a>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorBarComponent } from '../error-bar/error-bar.component';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild(ErrorBarComponent) private _errorBar: ErrorBarComponent;\n  private _title = 'Login';\n  public loginUserFormGroup: FormGroup;\n\n  constructor(private _titleService: Title, private _fb: FormBuilder, private _router: Router, private _userService: UserService, private _tokenService: TokenService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    this.loginUserFormGroup = this._fb.group({\n      username: new FormControl('', [\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ])\n    });\n  }\n\n  onSubmit(): void {\n    this._errorBar.hideError();\n    this._userService.loginUserRequest(this.loginUserFormGroup).subscribe({\n        next: (res: object) => {\n          this._tokenService.setUserTokenToSessionStorage(res);\n          this._router.navigate(['/']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n    });\n  }\n\n  onRedirectRegister(): void {\n    this._router.navigate(['/register']);\n  }\n}\n","<main class=\"centered-content flex-col flex-center-align-items flex-justify-center height-full\">\n\t<summary class=\"title card width-full margin-0 padding-dot2\">Login</summary>\n\n\t<app-error-bar class=\"width-full margin-top-dot4\"></app-error-bar>\n\n\t<form class=\"width-full card padding-dot6\" [formGroup]=\"loginUserFormGroup\" (ngSubmit)=\"onSubmit()\">\n\t\t<section class=\"input-selection width-full\">\n\t\t\t<input type=\"text\" placeholder=\"Username\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"username\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Username</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"loginUserFormGroup.get('username')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"input-selection\">\n\t\t\t<input type=\"password\" placeholder=\"Password\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"password\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Password</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"loginUserFormGroup.get('password')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t</div>\n\t\t</section>\n\n\t\t<button class=\"border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 width-full\" type=\"submit\">Submit</button>\n\t</form>\n\t<button class=\"fg-focus border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 width-full margin-top-dot4\" (click)=\"onRedirectRegister()\">New to DevHive? Register instead</button>\n</main>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Guid } from 'guid-typescript';\nimport { AppConstants } from 'src/app/app-constants.module';\nimport { CommentService } from 'src/app/services/comment.service';\nimport { LanguageService } from 'src/app/services/language.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { TechnologyService } from 'src/app/services/technology.service';\nimport { TokenService } from 'src/app/services/token.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/models/identity/user.model';\nimport { Language } from 'src/models/language.model';\nimport { Technology } from 'src/models/technology.model';\nimport { ErrorBarComponent } from '../error-bar/error-bar.component';\nimport { SuccessBarComponent } from '../success-bar/success-bar.component';\n\n@Component({\n  selector: 'app-admin-panel-page',\n  templateUrl: './admin-panel-page.component.html',\n  styleUrls: ['./admin-panel-page.component.css']\n})\nexport class AdminPanelPageComponent implements OnInit {\n  private _title = 'Admin Panel';\n  @ViewChild(ErrorBarComponent) private _errorBar: ErrorBarComponent;\n  @ViewChild(SuccessBarComponent) private _successBar: SuccessBarComponent;\n  public dataArrived = false;\n  public showLanguages = false;\n  public showTechnologies = false;\n  public showDeletions = false;\n  public availableLanguages: Language[];\n  public availableTechnologies: Technology[];\n  public languageForm: FormGroup;\n  public technologyForm: FormGroup;\n  public deleteForm: FormGroup;\n\n  constructor(private _titleService: Title, private _router: Router, private _fb: FormBuilder, private _userService: UserService, private _languageService: LanguageService, private _technologyService: TechnologyService, private _tokenService: TokenService, private _postService: PostService, private _commentService: CommentService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    if (!this._tokenService.getTokenFromSessionStorage()) {\n      this._router.navigate(['/login']);\n      return;\n    }\n\n    this._userService.getUserFromSessionStorageRequest().subscribe({\n      next: (result: object) => {\n        const user = result as User;\n        if (!user.roles.map(x => x.name).includes(AppConstants.ADMIN_ROLE_NAME)) {\n          this._router.navigate(['/login']);\n        }\n      },\n      error: () => {\n        this._router.navigate(['/login']);\n      }\n    });\n\n    this.languageForm = this._fb.group({\n      languageCreate: new FormControl(''),\n      updateLanguageOldName: new FormControl(''),\n      updateLanguageNewName: new FormControl(''),\n      deleteLanguageName: new FormControl('')\n    });\n\n    this.languageForm.valueChanges.subscribe({\n      next: () => {\n        this._successBar?.hideMsg();\n        this._errorBar?.hideError();\n      }\n    });\n\n    this.technologyForm = this._fb.group({\n      technologyCreate: new FormControl(''),\n      updateTechnologyOldName: new FormControl(''),\n      updateTechnologyNewName: new FormControl(''),\n      deleteTechnologyName: new FormControl('')\n    });\n\n    this.technologyForm.valueChanges.subscribe({\n      next: () => {\n        this._successBar?.hideMsg();\n        this._errorBar?.hideError();\n      }\n    });\n\n    this.deleteForm = this._fb.group({\n      deleteUser: new FormControl(''),\n      deletePost: new FormControl(''),\n      deleteComment: new FormControl('')\n    });\n\n    this.deleteForm.valueChanges.subscribe({\n      next: () => {\n        this._successBar?.hideMsg();\n        this._errorBar?.hideError();\n      }\n    });\n\n    this.loadAvailableLanguages();\n    this.loadAvailableTechnologies();\n  }\n\n  private loadAvailableLanguages(): void {\n    this._languageService.getAllLanguagesWithSessionStorageRequest().subscribe({\n      next: (result: object) => {\n        this.availableLanguages = result as Language[];\n        this.dataArrived = true;\n      }\n    });\n  }\n\n  private loadAvailableTechnologies(): void {\n     this._technologyService.getAllTechnologiesWithSessionStorageRequest().subscribe({\n      next: (result: object) => {\n        this.availableTechnologies = result as Technology[];\n        this.dataArrived = true;\n      }\n     });\n  }\n\n  // Navigation\n\n  backToProfile(): void {\n    this._router.navigate(['/profile/' + this._tokenService.getUsernameFromSessionStorageToken()]);\n  }\n\n  backToFeed(): void {\n    this._router.navigate(['/']);\n  }\n\n  logout(): void {\n    this._tokenService.logoutUserFromSessionStorage();\n    this._router.navigate(['/login']);\n  }\n\n  // Language modifying\n\n  toggleLanguages(): void {\n    this.showLanguages = !this.showLanguages;\n  }\n\n  submitLanguages(): void {\n    this.tryCreateLanguage();\n    this.tryUpdateLanguage();\n    this.tryDeleteLanguage();\n  }\n\n  private tryCreateLanguage(): void {\n    const languageCreate: string = this.languageForm.get('languageCreate')?.value;\n\n    if (languageCreate !== '' && languageCreate !== null) {\n      this._languageService.createLanguageWithSessionStorageRequest(languageCreate.trim()).subscribe({\n        next: () => {\n          this.languageModifiedSuccess('Successfully updated languages!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryUpdateLanguage(): void {\n    const updateLanguageOldName: string = this.languageForm.get('updateLanguageOldName')?.value;\n    const updateLanguageNewName: string = this.languageForm.get('updateLanguageNewName')?.value;\n\n    if (updateLanguageOldName !== '' && updateLanguageOldName !== null && updateLanguageNewName !== '' && updateLanguageNewName !== null) {\n      const langId = this.availableLanguages.filter(x => x.name === updateLanguageOldName.trim())[0].id;\n\n      this._languageService.putLanguageWithSessionStorageRequest(langId, updateLanguageNewName.trim()).subscribe({\n        next: () => {\n          this.languageModifiedSuccess('Successfully updated languages!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryDeleteLanguage(): void {\n    const deleteLanguageName: string = this.languageForm.get('deleteLanguageName')?.value;\n\n    if (deleteLanguageName !== '' && deleteLanguageName !== null) {\n      const langId = this.availableLanguages.filter(x => x.name === deleteLanguageName.trim())[0].id;\n\n      this._languageService.deleteLanguageWithSessionStorageRequest(langId).subscribe({\n        next: () => {\n          this.languageModifiedSuccess('Successfully deleted language!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private languageModifiedSuccess(successMsg: string): void {\n    this.languageForm.reset();\n    this._successBar.showMsg(successMsg);\n    this.loadAvailableLanguages();\n  }\n\n\n  // Technology modifying\n\n  toggleTechnologies(): void {\n    this.showTechnologies = !this.showTechnologies;\n  }\n\n  submitTechnologies(): void {\n    this.tryCreateTechnology();\n    this.tryUpdateTechnology();\n    this.tryDeleteTechnology();\n  }\n\n  private tryCreateTechnology(): void {\n    const technologyCreate: string = this.technologyForm.get('technologyCreate')?.value;\n\n    if (technologyCreate !== '' && technologyCreate !== null) {\n      this._technologyService.createTechnologyWithSessionStorageRequest(technologyCreate.trim()).subscribe({\n        next: () => {\n          this.technologyModifiedSuccess('Successfully updated technologies!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryUpdateTechnology(): void {\n    const updateTechnologyOldName: string = this.technologyForm.get('updateTechnologyOldName')?.value;\n    const updateTechnologyNewName: string = this.technologyForm.get('updateTechnologyNewName')?.value;\n\n    if (updateTechnologyOldName !== '' && updateTechnologyOldName !== null && updateTechnologyNewName !== '' && updateTechnologyNewName !== null) {\n      const techId = this.availableTechnologies.filter(x => x.name === updateTechnologyOldName.trim())[0].id;\n\n      this._technologyService.putTechnologyWithSessionStorageRequest(techId, updateTechnologyNewName.trim()).subscribe({\n        next: () => {\n          this.technologyModifiedSuccess('Successfully updated technologies!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryDeleteTechnology(): void {\n    const deleteTechnologyName: string = this.technologyForm.get('deleteTechnologyName')?.value;\n\n    if (deleteTechnologyName !== '' && deleteTechnologyName !== null) {\n      const techId = this.availableTechnologies.filter(x => x.name === deleteTechnologyName.trim())[0].id;\n\n      this._technologyService.deleteTechnologyWithSessionStorageRequest(techId).subscribe({\n        next: () => {\n          this.technologyModifiedSuccess('Successfully deleted technology!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private technologyModifiedSuccess(successMsg: string): void {\n    this.technologyForm.reset();\n    this._successBar.showMsg(successMsg);\n    this.loadAvailableTechnologies();\n  }\n\n  // Deletions\n\n  toggleDeletions(): void {\n    this.showDeletions = !this.showDeletions;\n  }\n\n  submitDelete(): void {\n    this.tryDeleteUser();\n    this.tryDeletePost();\n    this.tryDeleteComment();\n  }\n\n  private tryDeleteUser(): void {\n    const deleteUser: string = this.deleteForm.get('deleteUser')?.value;\n\n    if (deleteUser !== '' && deleteUser !== null) {\n      const userId: Guid = Guid.parse(deleteUser);\n\n      this._userService.deleteUserRequest(userId, this._tokenService.getTokenFromSessionStorage()).subscribe({\n        next: () => {\n          this.deletionSuccess('Successfully deleted user!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryDeletePost(): void {\n    const deletePost: string = this.deleteForm.get('deletePost')?.value;\n\n    if (deletePost !== '' && deletePost !== null) {\n      const postId: Guid = Guid.parse(deletePost);\n\n      this._postService.deletePostRequest(postId, this._tokenService.getTokenFromSessionStorage()).subscribe({\n        next: () => {\n          this.deletionSuccess('Successfully deleted user!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private tryDeleteComment(): void {\n    const deleteComment: string = this.deleteForm.get('deleteComment')?.value;\n\n    if (deleteComment !== '' && deleteComment !== null) {\n      const commentId: Guid = Guid.parse(deleteComment);\n\n      this._commentService.deleteCommentWithSessionStorage(commentId).subscribe({\n        next: () => {\n          this.deletionSuccess('Successfully deleted comment!');\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n      });\n    }\n  }\n\n  private deletionSuccess(successMsg: string): void {\n    this.deleteForm.reset();\n    this._successBar.showMsg(successMsg);\n  }\n}\n","<app-navbar></app-navbar>\n\n<app-loading *ngIf=\"!dataArrived\"></app-loading>\n\n<main class=\"scroll-standalone under-navbar centered-content flex-col\" *ngIf=\"dataArrived\">\n\t<app-success-bar></app-success-bar>\n\t<app-error-bar></app-error-bar>\n\n\t<div class=\"card width-full\">\n\t\t<section>\n\t\t\t<button type=\"button\" class=\"fg-focus width-full border-faded-slim padding-dot3 lighter-hover click-effect\" (click)=\"toggleLanguages()\">\n\t\t\t\t▼ Edit Languages ▼\n\t\t\t</button>\n\t\t\t<form class=\"flex-col margin-top-bot-dot3\" [formGroup]=\"languageForm\" (ngSubmit)=\"submitLanguages()\" *ngIf=\"showLanguages\">\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tCreate language:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"languageCreate\" placeholder=\"New language name\">\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tUpdate language:\n\t\t\t\t</label>\n\t\t\t\t<div class=\"flex-row flexible-children\">\n\t\t\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only margin-right-dot2\" formControlName=\"updateLanguageOldName\" placeholder=\"Old language name\">\n\t\t\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"updateLanguageNewName\" placeholder=\"New language name\">\n\t\t\t\t</div>\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tDelete language:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"deleteLanguageName\" placeholder=\"Language name\">\n\n\t\t\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" type=\"submit\">\n\t\t\t\t\tModify languages\n\t\t\t\t</button>\n\t\t\t\t<section class=\"border-faded-slim padding-dot4 margin-top-dot4\">\n\t\t\t\t\t<div class=\"none-message\" *ngIf=\"availableLanguages.length === 0\">\n\t\t\t\t\t\tNo languages in database!\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"availableLanguages.length > 0\">\n\t\t\t\t\t\tAvailable languages:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-row margin-top-dot4\" *ngFor=\"let lang of availableLanguages\">\n\t\t\t\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t\t\t\t{{ lang.name }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</form>\n\t\t</section>\n\t\t<section>\n\t\t\t<button type=\"button\" class=\"fg-focus width-full border-faded-slim padding-dot3 lighter-hover click-effect margin-top-dot4\" (click)=\"toggleTechnologies()\">\n\t\t\t\t▼ Edit Technologies ▼\n\t\t\t</button>\n\t\t\t<form class=\"flex-col margin-top-bot-dot3\" [formGroup]=\"technologyForm\" (ngSubmit)=\"submitTechnologies()\" *ngIf=\"showTechnologies\">\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tCreate technology:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"technologyCreate\" placeholder=\"New technology name\">\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tUpdate technology:\n\t\t\t\t</label>\n\t\t\t\t<div class=\"flex-row flexible-children\">\n\t\t\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only margin-right-dot2\" formControlName=\"updateTechnologyOldName\" placeholder=\"Old technology name\">\n\t\t\t\t\t<input type=\"text\" class=\"fancy-input border-faded-slim border-bottom-only\" formControlName=\"updateTechnologyNewName\" placeholder=\"New technology name\">\n\t\t\t\t</div>\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tDelete technology:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"deleteTechnologyName\" placeholder=\"Technology name\">\n\n\t\t\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" type=\"submit\">\n\t\t\t\t\tModify technology\n\t\t\t\t</button>\n\t\t\t\t<section class=\"border-faded-slim padding-dot4 margin-top-dot4\">\n\t\t\t\t\t<div class=\"none-message\" *ngIf=\"availableTechnologies.length === 0\">\n\t\t\t\t\t\tNo technologies in database!\n\t\t\t\t\t</div>\n\t\t\t\t\t<div *ngIf=\"availableTechnologies.length > 0\">\n\t\t\t\t\t\tAvailable technologies:\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex-row margin-top-dot4\" *ngFor=\"let tech of availableTechnologies\">\n\t\t\t\t\t\t<div class=\"sec-info border-radius-dot5r padding-dot2\">\n\t\t\t\t\t\t\t{{ tech.name }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</form>\n\t\t</section>\n\t\t<section>\n\t\t\t<button type=\"button\" class=\"fg-focus width-full border-faded-slim padding-dot3 lighter-hover click-effect margin-top-dot4\" (click)=\"toggleDeletions()\">\n\t\t\t\t▼ Deletions ▼\n\t\t\t</button>\n\t\t\t<form class=\"flex-col margin-top-bot-dot3\" [formGroup]=\"deleteForm\" (ngSubmit)=\"submitDelete()\" *ngIf=\"showDeletions\">\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tDelete user by Id:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"deleteUser\" placeholder=\"User Id\">\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tDelete post by Id:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"deletePost\" placeholder=\"Post Id\">\n\n\t\t\t\t<label class=\"fg-focus\">\n\t\t\t\t\tDelete comment by Id:\n\t\t\t\t</label>\n\t\t\t\t<input type=\"text\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"deleteComment\" placeholder=\"Comment Id\">\n\n\t\t\t\t<button class=\"width-full border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3\" type=\"submit\">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</section>\n\t</div>\n</main>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ErrorBarComponent } from '../error-bar/error-bar.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @ViewChild(ErrorBarComponent) private _errorBar: ErrorBarComponent;\n  private _title = 'Register';\n  public registerUserFormGroup: FormGroup;\n\n  constructor(private _titleService: Title, private _fb: FormBuilder, private _router: Router, private _userService: UserService, private _tokenService: TokenService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    this.registerUserFormGroup = this._fb.group({\n      firstName: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      lastName: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.pattern('.*[0-9].*') // Check if password contains atleast one number\n      ]),\n    });\n\n    // this.registerUserFormGroup.valueChanges.subscribe(console.log);\n  }\n\n  onSubmit(): void {\n    this._userService.registerUserRequest(this.registerUserFormGroup).subscribe({\n        next: (res: object) => {\n          this._tokenService.setUserTokenToSessionStorage(res);\n          this._router.navigate(['/']);\n        },\n        error: (err: HttpErrorResponse) => {\n          this._errorBar.showError(err);\n        }\n    });\n  }\n  onRedirectLogin(): void {\n    this._router.navigate(['/login']);\n  }\n}\n","<main class=\"centered-content flex-col flex-center-align-items flex-justify-center height-full\">\n\t<summary class=\"title card width-full margin-0 padding-dot2\">Register</summary>\n\n\t<app-error-bar class=\"width-full margin-top-dot4\"></app-error-bar>\n\n\t<form class=\"width-full card padding-dot6\" [formGroup]=\"registerUserFormGroup\" (ngSubmit)=\"onSubmit()\">\n\t\t<section class=\"input-selection width-full\">\n\t\t\t<input type=\"text\" placeholder=\"First Name\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"firstName\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">First Name</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('firstName')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('firstName')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"input-selection\">\n\t\t\t<input type=\"text\" placeholder=\"Last Name\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"lastName\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Last Name</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('lastName')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('lastName')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"input-selection\">\n\t\t\t<input type=\"text\" placeholder=\"Username\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"username\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Username</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('username')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('username')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"input-selection\">\n\t\t\t<input type=\"text\" placeholder=\"Email\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"email\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Email</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('email')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('email')?.errors?.email\" class=\"error\">*Invalid email</label>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"input-selection\">\n\t\t\t<input type=\"password\" placeholder=\"Password\" class=\"fancy-input width-full border-faded-slim border-bottom-only\" formControlName=\"password\" required>\n\t\t\t<label class=\"fancy-input-label width-full\">Password</label>\n\t\t\t<div class=\"input-errors\">\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('password')?.errors?.required\" class=\"error\">*Required</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('password')?.errors?.minlength\" class=\"error\">*Minimum 3 characters</label>\n\t\t\t\t<label *ngIf=\"registerUserFormGroup.get('password')?.errors?.pattern\" class=\"error\">*At least 1 number</label>\n\t\t\t</div>\n\t\t</section>\n\n\n\t\t<button class=\"border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 width-full\" type=\"submit\">Submit</button>\n\t</form>\n\t<button class=\"fg-focus border-faded-slim padding-dot3 lighter-hover click-effect border-radius-dot3 width-full margin-top-dot4\" (click)=\"onRedirectLogin()\">\n\t\tAlready have an account? Login here\n\t</button>\n</main>\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Guid } from 'guid-typescript';\nimport { CloudinaryService } from 'src/app/services/cloudinary.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { RatingService } from 'src/app/services/rating.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/models/identity/user.model';\nimport { Post } from 'src/models/post.model';\nimport { TokenService } from '../../services/token.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit, AfterViewInit {\n  public loaded = false;\n  public user: User;\n  public post: Post;\n  public votesNumber: number;\n  public timeCreated: string;\n  @Input() paramId: string;\n  @ViewChild('upvote') upvoteBtn: ElementRef;\n  @ViewChild('downvote') downvoteBtn: ElementRef;\n  @ViewChild('share') shareBtn: ElementRef;\n  private _defaultShareBtnInnerHTML: string;\n  private _linkShared = false; // For optimisation purposes\n  public loggedIn = false;\n  public loggedInAuthor = false;\n  public editingPost = false;\n  public files: File[];\n  public editPostFormGroup: FormGroup;\n\n  constructor(private _postService: PostService, private _ratingServe: RatingService, private _userService: UserService, private _router: Router, private _tokenService: TokenService, private _cloudinaryService: CloudinaryService, private _fb: FormBuilder, private _elem: ElementRef, private _renderer: Renderer2)\n  { }\n\n  ngOnInit(): void {\n    this.loggedIn = this._tokenService.getTokenFromSessionStorage() !== '';\n\n    this.post = this._postService.getDefaultPost();\n    this.user = this._userService.getDefaultUser();\n    this.files = [];\n\n    this._postService.getPostRequest(Guid.parse(this.paramId)).subscribe({\n      next: (result: object) => {\n        Object.assign(this.post, result);\n\n        this.post.fileURLs = Object.values(result)[7];\n        this.votesNumber = this.post.currentRating;\n\n        this.timeCreated = new Date(this.post.timeCreated).toLocaleString('en-GB');\n\n        this.loadUser();\n      }\n    });\n\n    this.editPostFormGroup = this._fb.group({\n      newPostMessage: new FormControl(''),\n      fileUpload: new FormControl('')\n    });\n  }\n\n  private loadUser(): void {\n    this._userService.getUserByUsernameRequest(this.post.creatorUsername).subscribe({\n      next: (result: object) => {\n        Object.assign(this.user, result);\n\n        if (this.loggedIn) {\n          this.loggedInAuthor = this._tokenService.getUsernameFromSessionStorageToken() === this.post.creatorUsername;\n          this.editPostFormGroup.get('newPostMessage')?.setValue(this.post.message);\n\n          if (this.post.fileURLs.length > 0) {\n            this.loadFiles();\n            return;\n          }\n        }\n\n        this.loaded = true;\n      }\n    });\n  }\n\n  private loadFiles(): void {\n    for (const fileURL of this.post.fileURLs) {\n      this._cloudinaryService.getFileRequest(fileURL).subscribe({\n        next: (result: object) => {\n          const file = result as File;\n          const tmp = {\n            name: fileURL.match('(?<=\\/)(?:.(?!\\/))+$')?.pop() ?? 'Attachment'\n          };\n\n          Object.assign(file, tmp);\n          this.files.push(file);\n\n          if (this.files.length === this.post.fileURLs.length) {\n            this.loaded = true;\n          }\n        }\n      });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this._ratingServe.getRatingByUserAndPostWithSessionStorageRequest(Guid.parse(this.paramId)).subscribe({\n      next: (x: object) => {\n        const isLike: boolean = Object.values(x)[3];\n\n        this.changeColorOfVoteButton(isLike, !isLike);\n      }\n    });\n\n    this._defaultShareBtnInnerHTML = this.shareBtn.nativeElement.innerHTML;\n  }\n\n  goToAuthorProfile(): void {\n    this._router.navigate(['/profile/' + this.user.userName]);\n  }\n\n  goToPostPage(): void {\n    this._router.navigate(['/post/' + this.post.postId]);\n  }\n\n  toggleEditing(): void {\n    this.editingPost = !this.editingPost;\n  }\n\n  onFileUpload(event: any): void {\n    this.files.push(...event.target.files);\n    this.editPostFormGroup.get('fileUpload')?.reset();\n  }\n\n  removeAttachment(fileName: string): void {\n    this.files = this.files.filter(x => x.name !== fileName);\n  }\n\n  editPost(): void {\n    const newMessage = this.editPostFormGroup.get('newPostMessage')?.value;\n\n    if (newMessage !== '') {\n      this._postService.putPostWithSessionStorageRequest(Guid.parse(this.paramId), newMessage, this.files).subscribe({\n        next: () => {\n          this.reloadPage();\n        }\n      });\n      this.loaded = false;\n    }\n  }\n\n  deletePost(): void {\n    this._postService.deletePostWithSessionStorage(Guid.parse(this.paramId)).subscribe({\n      next: () => {\n        this._router.navigate(['/profile/' + this._tokenService.getUsernameFromSessionStorageToken()]);\n      }\n    });\n  }\n\n  private reloadPage(): void {\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n\n  votePost(isLike: boolean): void {\n    if (!this.loggedIn) {\n      this._router.navigate(['/login']);\n      return;\n    }\n\n    this._ratingServe.getRatingByUserAndPostWithSessionStorageRequest(Guid.parse(this.paramId)).subscribe(\n      (x: object) => {\n        if (Object.values(x)[3] === isLike) {\n          this.deleteRating(Object.values(x)[0], isLike);\n\n          this.changeColorOfVoteButton(false, false);\n        }\n        else {\n          this.putRating(isLike);\n\n          this.changeColorOfVoteButton(isLike, !isLike);\n        }\n      },\n      () => {\n        this.createRating(isLike);\n\n        this.changeColorOfVoteButton(isLike, !isLike);\n      }\n    );\n  }\n\n  private createRating(isLike: boolean): void {\n    this._ratingServe.createRatingWithSessionStorageRequest(Guid.parse(this.paramId), isLike).subscribe(\n      () => {\n        this.votesNumber += -1 + Number(isLike) * 2;\n      }\n    );\n  }\n\n  private putRating(isLike: boolean): void {\n    this._ratingServe.putRatingWithSessionStorageRequest(Guid.parse(this.paramId), isLike).subscribe(\n      () => {\n        // when false -2 + 0 wjen true -2 + 4\n        this.votesNumber += -2 + Number(isLike) * 4;\n      }\n    );\n  }\n\n  private deleteRating(ratingId: string, isLike: boolean): void {\n    this._ratingServe.deleteRatingFromSessionStorageRequest(Guid.parse(ratingId)).subscribe(\n      () => {\n        this.votesNumber += 1 - Number(isLike) * 2;\n      }\n    );\n  }\n\n  private changeColorOfVoteButton(isUpvoted: boolean, isDownvoted: boolean): void {\n    this._renderer.setStyle(this.upvoteBtn.nativeElement, 'backgroundColor', (isUpvoted) ? 'var(--upvote-highlight)' : 'inherit');\n    this._renderer.setStyle(this.downvoteBtn.nativeElement, 'backgroundColor', (isDownvoted) ? 'var(--downvote-highlight)' : 'inherit');\n  }\n\n  resetShareBtn(): void {\n    if (this._linkShared) {\n      this._renderer.setProperty(this.shareBtn.nativeElement, 'innerHTML', this._defaultShareBtnInnerHTML);\n      this._linkShared = false;\n    }\n  }\n\n  showCopiedMessage(): void {\n    this._renderer.setProperty(this.shareBtn.nativeElement, 'innerHTML', 'Link copied to clipboard!');\n    this._linkShared = true;\n  }\n\n  getPostLink(): string {\n    return location.origin + '/post/' + this.paramId;\n  }\n}\n","<app-loading *ngIf=\"!loaded\"></app-loading>\n\n<section class=\"card flex-row\" [hidden]=\"loaded\" (mouseleave)=\"resetShareBtn()\">\n\t<aside class=\"left-pane\">\n\t\t<img class=\"author-picture round-image hover-half-opacity\" [src]=\"user.profilePictureURL\" (click)=\"goToAuthorProfile()\">\n\t</aside>\n\t<main class=\"content flexible\">\n\t\t<summary class=\"font-size-dot8 text-vertical-middle hover-half-opacity\"  (click)=\"goToAuthorProfile()\">\n\t\t\t<span>\n\t\t\t\t{{ user.firstName }} {{ user.lastName }}\n\t\t\t</span>\n\t\t\t<span class=\"fg-faded\">\n\t\t\t\t@{{ user.userName }}\n\t\t\t</span>\n\t\t</summary>\n\t\t<article class=\"message margin-top-bot-dot2\" *ngIf=\"!editingPost\">\n\t\t\t{{ post.message }}\n\t\t</article>\n\t\t<section class=\"flex-row flexible-children\" *ngIf=\"!editingPost\">\n\t\t\t<figure *ngFor=\"let fileURL of post.fileURLs\">\n\t\t\t\t<app-post-attachment [paramURL]=\"fileURL\"></app-post-attachment>\n\t\t\t</figure>\n\t\t</section>\n\t\t<form [formGroup]=\"editPostFormGroup\" *ngIf=\"editingPost\">\n\t\t\t<textarea class=\"textarea-new-msg width-full border-faded-slim border-bottom-only padding-dot2\" rows=\"1\" formControlName=\"newPostMessage\" placeholder=\"What's on your mind?\"></textarea>\n\t\t\t<section class=\"flex-row flex-justify-start align-children-center top-bot-padding-dot6ger\">\n\t\t\t\t<div class=\"file-button hover-half-opacity click-effect\">\n\t\t\t\t\t<img src=\"/assets/icons/tabler-icon-paperclip.svg\">\n\t\t\t\t\t<input type=\"file\" formControlName=\"fileUpload\" (change)=\"onFileUpload($event)\" multiple>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</form>\n\t\t<section class=\"flex-row bot-padding-dot6ger\" *ngIf=\"editingPost\">\n\t\t\t<div *ngFor=\"let file of files\" class=\"form-attachment border-faded-slim flexible flex-row flex-no-wrap flex-center-align-items padding-dot2 margin-top-bot-dot2\">\n\t\t\t\t<div class=\"flexible\">\n\t\t\t\t\t{{ file.name ? file.name : 'Attachment' }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-col hover-half-opacity border-radius-dot2 click-effect\" (click)=\"removeAttachment(file.name)\">\n\t\t\t\t\t<img src=\"/assets/icons/tabler-icon-x.svg\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<button class=\"border-faded-slim width-full padding-dot2 lighter-hover click-effect border-radius-dot3 margin-bot-dot5\" *ngIf=\"editingPost\" (click)=\"editPost()\">\n\t\t\tUpdate Post\n\t\t</button>\n\t\t<section class=\"post-details flex-row flex-justify-end font-size-dot7 border-faded-slim border-bottom-only\">\n\t\t\t<time class=\"flex-row flex-center-align-items\">\n\t\t\t\t<img class=\"height-font\" src=\"/assets/icons/tabler-icon-calendar-time.svg\">&nbsp;\n\t\t\t\t<span>\n\t\t\t\t\t{{ timeCreated }}\n\t\t\t\t</span>\n\t\t\t</time>\n\t\t\t<summary class=\"flex-row flex-center-align-items\">\n\t\t\t\t<img class=\"height-font\" src=\"/assets/icons/tabler-icon-message-2.svg\">&nbsp;\n\t\t\t\t<span>\n\t\t\t\t\t{{ post.comments.length }}\n\t\t\t\t</span>\n\t\t\t</summary>\n\t\t</section>\n\t\t<section class=\"flex-row justify-children-center align-children-center\">\n\t\t\t<button class=\"padding-dot2 lighter-hover click-effect border-radius-dot3\" *ngIf=\"loggedInAuthor\" (click)=\"toggleEditing()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-edit.svg\">\n\t\t\t</button>\n\t\t\t<button class=\"flexible padding-dot2 lighter-hover click-effect border-radius-dot3\" (click)=\"goToPostPage()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-message-2.svg\">\n\t\t\t\t&nbsp;Comment\n\t\t\t</button>\n\t\t\t<button #share ngxClipboard [cbContent]=\"getPostLink()\" class=\"flexible padding-dot2 lighter-hover click-effect border-radius-dot3\" (click)=\"showCopiedMessage()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-link.svg\">\n\t\t\t\t&nbsp;Share\n\t\t\t</button>\n\t\t\t<button class=\"padding-dot2 lighter-hover click-effect border-radius-dot3\" *ngIf=\"loggedInAuthor\" (click)=\"deletePost()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-trash.svg\">\n\t\t\t</button>\n\t\t</section>\n\t</main>\n\t<aside class=\"rating flex-col flex-center-align-items\">\n\t\t<button #upvote class=\"flex-col lighter-hover border-radius-dot2 click-effect\" (click)=\"votePost(true)\">\n\t\t\t<img src=\"/assets/icons/tabler-icon-chevron-up.svg\">\n\t\t</button>\n\t\t<summary class=\"top-bot-padding-dot2\">\n\t\t\t{{ votesNumber }}\n\t\t</summary>\n\t\t<button #downvote class=\"flex-col lighter-hover border-radius-dot2 click-effect\" (click)=\"votePost(false)\">\n\t\t\t<img src=\"/assets/icons/tabler-icon-chevron-down.svg\">\n\t\t</button>\n\t</aside>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClipboardModule } from 'ngx-clipboard';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { FeedComponent } from './components/feed/feed.component';\nimport { PostComponent } from './components/post/post.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ProfileSettingsComponent } from './components/profile-settings/profile-settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport { ErrorBarComponent } from './components/error-bar/error-bar.component';\nimport { SuccessBarComponent } from './components/success-bar/success-bar.component';\nimport { PostPageComponent } from './components/post-page/post-page.component';\nimport { AdminPanelPageComponent } from './components/admin-panel-page/admin-panel-page.component';\nimport { CommentComponent } from './components/comment/comment.component';\nimport { PostAttachmentComponent } from './components/post-attachment/post-attachment.component';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    FeedComponent,\n    PostComponent,\n    ProfileComponent,\n    ProfileSettingsComponent,\n    NotFoundComponent,\n    LoadingComponent,\n    ErrorBarComponent,\n    SuccessBarComponent,\n    PostPageComponent,\n    AdminPanelPageComponent,\n    CommentComponent,\n    PostAttachmentComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule,\n    RouterModule,\n    ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Guid } from 'guid-typescript';\n\nexport class Comment {\n  private _commentId: Guid;\n  private _postId: Guid;\n  private _issuerFirstName: string;\n  private _issuerLastName: string;\n  private _issuerUsername: string;\n  private _message: string;\n  private _timeCreated: Date;\n\n  constructor(commentId: Guid, postId: Guid, issuerFirstName: string, issuerLastName: string, issuerUsername: string, message: string, timeCreated: Date) {\n    this.commentId = commentId;\n    this.postId = postId;\n    this.issuerFirstName = issuerFirstName;\n    this.issuerLastName = issuerLastName;\n    this.issuerUsername = issuerUsername;\n    this.message = message;\n    this.timeCreated = timeCreated;\n  }\n\n  public get commentId(): Guid {\n    return this._commentId;\n  }\n  public set commentId(v: Guid) {\n    this._commentId = v;\n  }\n\n  public get postId(): Guid {\n    return this._postId;\n  }\n  public set postId(v: Guid) {\n    this._postId = v;\n  }\n\n  public get issuerFirstName(): string {\n    return this._issuerFirstName;\n  }\n  public set issuerFirstName(v: string) {\n    this._issuerFirstName = v;\n  }\n\n  public get issuerLastName(): string {\n    return this._issuerLastName;\n  }\n  public set issuerLastName(v: string) {\n    this._issuerLastName = v;\n  }\n\n  public get issuerUsername(): string {\n    return this._issuerUsername;\n  }\n  public set issuerUsername(v: string) {\n    this._issuerUsername = v;\n  }\n\n  public get message(): string {\n    return this._message;\n  }\n  public set message(v: string) {\n    this._message = v;\n  }\n\n  public get timeCreated(): Date {\n    return this._timeCreated;\n  }\n  public set timeCreated(v: Date) {\n    this._timeCreated = v;\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class CloudinaryService {\n  constructor(private _http: HttpClient)\n  { }\n\n  getFileRequest(fileLink: string): Observable<Blob> {\n    return this._http.get(fileLink, {\n      responseType: 'blob'\n    });\n  }\n}\n","import { AfterViewInit, Component, ElementRef, Input, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Guid } from 'guid-typescript';\nimport { CommentService } from 'src/app/services/comment.service';\nimport { TokenService } from 'src/app/services/token.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Comment } from 'src/models/comment.model';\nimport { User } from 'src/models/identity/user.model';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit, AfterViewInit {\n  public loaded = false;\n  public loggedInAuthor = false;\n  public editingComment = false;\n  public user: User;\n  public comment: Comment;\n  public timeCreated: string;\n  @Input() paramId: string;\n  public editCommentFormGroup: FormGroup;\n  @ViewChild('share') shareBtn: ElementRef;\n  private _defaultShareBtnInnerHTML: string;\n  private _linkShared = false;\n\n  constructor(private _router: Router, private _commentService: CommentService, private _userService: UserService, private _tokenService: TokenService, private _fb: FormBuilder, private _elem: ElementRef, private _renderer: Renderer2)\n  { }\n\n  ngOnInit(): void {\n    this.comment = this._commentService.getDefaultComment();\n    this.user = this._userService.getDefaultUser();\n\n    this._commentService.getCommentRequest(Guid.parse(this.paramId)).subscribe({\n      next: (result: object) => {\n        Object.assign(this.comment, result);\n\n        this.timeCreated = new Date(this.comment.timeCreated).toLocaleString('en-GB');\n        this.loadUser();\n      }\n    });\n\n    this.editCommentFormGroup = this._fb.group({\n      newCommentMessage: new FormControl('')\n    });\n  }\n\n  private loadUser(): void {\n    this._userService.getUserByUsernameRequest(this.comment.issuerUsername).subscribe({\n      next: (result: object) => {\n        Object.assign(this.user, result);\n\n        if (this._tokenService.getTokenFromSessionStorage() !== '') {\n          this.loggedInAuthor = this._tokenService.getUsernameFromSessionStorageToken() === this.comment.issuerUsername;\n          this.editCommentFormGroup.get('newCommentMessage')?.setValue(this.comment.message);\n        }\n\n        this.loaded = true;\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this._defaultShareBtnInnerHTML = this.shareBtn.nativeElement.innerHTML;\n  }\n\n  goToAuthorProfile(): void {\n    this._router.navigate(['/profile/' + this.comment.issuerUsername]);\n  }\n\n  toggleEditing(): void {\n    this.editingComment = !this.editingComment;\n  }\n\n  editComment(): void {\n    if (this._tokenService.getTokenFromSessionStorage() === '') {\n      this._router.navigate(['/login']);\n      return;\n    }\n\n    if (this.editingComment) {\n      const newMessage = this.editCommentFormGroup.get('newCommentMessage')?.value;\n\n      if (newMessage !== '' && newMessage !== this.comment.message) {\n        this._commentService.putCommentWithSessionStorageRequest(Guid.parse(this.paramId), this.comment.postId, newMessage).subscribe({\n          next: () => {\n            this.reloadPage();\n          }\n        });\n      }\n    }\n    this.editingComment = !this.editingComment;\n  }\n\n  deleteComment(): void {\n    this._commentService.deleteCommentWithSessionStorage(Guid.parse(this.paramId)).subscribe({\n      next: () => {\n        this.reloadPage();\n      }\n    });\n  }\n\n  private reloadPage(): void {\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n\n  resetShareBtn(): void {\n    if (this._linkShared) {\n      this._renderer.setProperty(this.shareBtn.nativeElement, 'innerHTML', this._defaultShareBtnInnerHTML);\n      this._linkShared = false;\n    }\n  }\n\n  showCopiedMessage(): void {\n    this._renderer.setProperty(this.shareBtn.nativeElement, 'innerHTML', 'Link copied to clipboard!');\n    this._linkShared = true;\n  }\n\n  getPostLink(): string {\n    return location.origin + '/comment/' + this.paramId;\n  }\n}\n","<app-loading *ngIf=\"!loaded\"></app-loading>\n\n<section class=\"card flex-row\" [hidden]=\"loaded\" (mouseleave)=\"resetShareBtn()\">\n\t<aside class=\"left-pane\">\n\t\t<img class=\"author-picture round-image hover-half-opacity\" [src]=\"user.profilePictureURL\" (click)=\"goToAuthorProfile()\">\n\t</aside>\n\t<main class=\"content flexible\">\n\t\t<summary class=\"font-size-dot8 text-vertical-middle hover-half-opacity\" (click)=\"goToAuthorProfile()\">\n\t\t\t<span>\n\t\t\t\t{{ user.firstName }} {{ user.lastName }}\n\t\t\t</span>\n\t\t\t<span class=\"fg-faded\">\n\t\t\t\t@{{ user.userName }}\n\t\t\t</span>\n\t\t</summary>\n\t\t<form [formGroup]=\"editCommentFormGroup\" *ngIf=\"editingComment\" (ngSubmit)=\"editComment()\">\n\t\t\t<textarea class=\"textarea-new-msg width-full border-faded-slim border-bottom-only padding-dot2 margin-bot-dot5\" rows=\"1\" formControlName=\"newCommentMessage\" placeholder=\"What's on your mind?\"></textarea>\n\t\t\t<button type=\"submit\" class=\"border-faded-slim width-full padding-dot2 lighter-hover click-effect border-radius-dot3 margin-bot-dot5\">\n\t\t\t\tUpdate Comment\n\t\t\t</button>\n\t\t</form>\n\t\t<article class=\"message margin-top-bot-dot2\" *ngIf=\"!editingComment\">\n\t\t\t{{ comment.message }}\n\t\t</article>\n\t\t<section class=\"comment-details flex-row flex-justify-end font-size-dot7 border-faded-slim border-bottom-only\">\n\t\t\t<time class=\"flex-row flex-center-align-items\">\n\t\t\t\t<img class=\"height-font\" src=\"/assets/icons/tabler-icon-calendar-time.svg\">&nbsp;\n\t\t\t\t<span>\n\t\t\t\t\t{{ timeCreated }}\n\t\t\t\t</span>\n\t\t\t</time>\n\t\t</section>\n\t\t<section class=\"flex-row justify-children-center align-children-center\">\n\t\t\t<button class=\"padding-dot2 lighter-hover click-effect border-radius-dot3\" *ngIf=\"loggedInAuthor\" (click)=\"toggleEditing()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-edit.svg\">\n\t\t\t</button>\n\t\t\t<button #share ngxClipboard [cbContent]=\"getPostLink()\" class=\"flexible padding-dot2 lighter-hover click-effect border-radius-dot3\" (click)=\"showCopiedMessage()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-link.svg\">\n\t\t\t\t&nbsp;Share\n\t\t\t</button>\n\t\t\t<button class=\"padding-dot2 lighter-hover click-effect border-radius-dot3\" *ngIf=\"loggedInAuthor\" (click)=\"deleteComment()\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-trash.svg\">\n\t\t\t</button>\n\t\t</section>\n\t</main>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/models/identity/user.model';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  public user: User;\n  public loggedIn: Boolean;\n\n  constructor(private _router: Router, private _userService: UserService, private _tokenService: TokenService)\n  { }\n\n  ngOnInit(): void {\n    this.loggedIn = this._tokenService.getTokenFromSessionStorage() !== '';\n\n    this.user = this._userService.getDefaultUser();\n    this.user.userName = ''; // so you don't always see a flash of 'Gosho'\n\n    this._userService.getUserFromSessionStorageRequest().subscribe({\n      next: (res: object) => {\n        Object.assign(this.user, res);\n      },\n    });\n  }\n\n  goToProfile(): void {\n    // Properly reload the page\n    // Needed because if you're on someone's profile and go to yours, angular won't refresh the page (with your info)\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n\n    this._router.navigate(['/profile/' + this.user.userName]);\n  }\n\n  goToFeed(): void {\n    if (this.loggedIn) {\n      this._router.navigate(['/']);\n    }\n    else {\n      this.goToLogin();\n    }\n  }\n\n  goToSettings(): void {\n    this._router.navigate(['/profile/' + this.user.userName + '/settings']);\n  }\n\n  logout(): void {\n    this._tokenService.logoutUserFromSessionStorage();\n    this.goToLogin();\n  }\n\n  goToLogin(): void {\n    this._router.navigate(['/login']);\n  }\n}\n","<nav id=\"navbar\">\n\t<div id=\"nav-contents\" class=\"centered-content flex-row padding-dot3 flex-center-align-items\">\n\t\t<div class=\"nav-item border-radius-dot2 flex-row flex-center-align-items light-hover hover-half-opacity click-effect\" (click)=\"goToProfile()\" *ngIf=\"loggedIn\">\n\t\t\t<div id=\"nav-profile-picture\" class=\"flex-col\">\n\t\t\t\t<img class=\"round-image\" [src]=\"user.profilePictureURL\">\n\t\t\t</div>\n\t\t\t<div id=\"nav-username\" class=\"font-size-dot9 flex-col\">\n\t\t\t\t<div class=\"padding-dot2\">\n\t\t\t\t\t@{{ user.userName }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" (click)=\"goToFeed()\" *ngIf=\"loggedIn\">\n\t\t\t<img src=\"/assets/icons/tabler-icon-home.svg\">\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" style=\"display: none\">\n\t\t\t<!-- Trending functionality isn't implemented yet! -->\n\t\t\t<img src=\"/assets/icons/tabler-icon-trending-up.svg\">\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" style=\"display: none\">\n\t\t\t<!-- Chat functionality isn't implemented yet! -->\n\t\t\t<img src=\"/assets/icons/tabler-icon-message-circle.svg\">\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" style=\"display: none\">\n\t\t\t<!-- Search functionality isn't implemented yet! -->\n\t\t\t<img src=\"/assets/icons/tabler-icon-search.svg\">\n\t\t</div>\n\t\t<div class=\"flexible\">\n\t\t\t<!-- This element serves as a spacer -->\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" (click)=\"goToSettings()\" *ngIf=\"loggedIn\">\n\t\t\t<img src=\"/assets/icons/tabler-icon-settings.svg\">\n\t\t</div>\n\t\t<div class=\"nav-item flex-col border-radius-dot2 light-hover hover-half-opacity click-effect\" (click)=\"logout()\" *ngIf=\"loggedIn\">\n\t\t\t<img src=\"/assets/icons/tabler-icon-logout.svg\">\n\t\t</div>\n\t\t<div class=\"nav-item flex-row flex-center-align-items border-radius-dot2 light-hover hover-half-opacity click-effect side-padding-dot3\" (click)=\"goToLogin()\" *ngIf=\"!loggedIn\">\n\t\t\tLogin&nbsp;\n\t\t\t<img src=\"/assets/icons/tabler-icon-login.svg\">\n\t\t</div>\n\t\t<div class=\"flexible\" *ngIf=\"!loggedIn\">\n\t\t\t<!-- This element serves as a spacer -->\n\t\t</div>\n\t</div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { User } from 'src/models/identity/user.model';\nimport { UserService } from '../../services/user.service';\nimport { AppConstants } from 'src/app/app-constants.module';\nimport { FeedService } from 'src/app/services/feed.service';\nimport { Post } from 'src/models/post.model';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { PostService } from 'src/app/services/post.service';\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css']\n})\nexport class FeedComponent implements OnInit {\n  private _title = 'Feed';\n  private _timeLoaded: string; // we send the time to the api as a string\n  private _currentPage: number;\n  public dataArrived = false;\n  public user: User;\n  public posts: Post[];\n  public createPostFormGroup: FormGroup;\n  public files: File[];\n\n  constructor(private _titleService: Title, private _fb: FormBuilder, private _router: Router, private _userService: UserService, private _feedService: FeedService, private _postService: PostService, private _tokenService: TokenService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    if (!this._tokenService.getTokenFromSessionStorage()) {\n      this._router.navigate(['/login']);\n      return;\n    }\n\n    this._currentPage = 1;\n    this.posts = [];\n    this.user = this._userService.getDefaultUser();\n    this.files = [];\n\n    const now = new Date();\n    now.setHours(now.getHours() + 2); // accounting for eastern european timezone\n    this._timeLoaded = now.toISOString();\n\n    this.createPostFormGroup = this._fb.group({\n      newPostMessage: new FormControl(''),\n      fileUpload: new FormControl('')\n    });\n\n    this._userService.getUserFromSessionStorageRequest().subscribe({\n      next: (res: object) => {\n        Object.assign(this.user, res);\n        this.loadFeed();\n      },\n      error: () => {\n        this.logout();\n      }\n    });\n  }\n\n  private loadFeed(): void {\n    this._feedService.getUserFeedFromSessionStorageRequest(this._currentPage++, this._timeLoaded, AppConstants.PAGE_SIZE).subscribe({\n      next: (result: object) => {\n        this.posts.push(...Object.values(result)[0]);\n        this.finishUserLoading();\n      },\n      error: () => {\n        this.finishUserLoading();\n      }\n    });\n  }\n\n  private finishUserLoading(): void {\n    this.dataArrived = true;\n  }\n\n  goToProfile(): void {\n    this._router.navigate(['/profile/' + this.user.userName]);\n  }\n\n  goToSettings(): void {\n    this._router.navigate(['/profile/' + this.user.userName + '/settings']);\n  }\n\n  logout(): void {\n    this._tokenService.logoutUserFromSessionStorage();\n    this._router.navigate(['/login']);\n  }\n\n  onFileUpload(event: any): void {\n    this.files.push(...event.target.files);\n    this.createPostFormGroup.get('fileUpload')?.reset();\n  }\n\n  removeAttachment(fileName: string): void {\n    this.files = this.files.filter(x => x.name !== fileName);\n  }\n\n  createPost(): void {\n    const postMessage = this.createPostFormGroup.get('newPostMessage')?.value;\n    this.dataArrived = false;\n\n    this._postService.createPostWithSessionStorageRequest(postMessage, this.files).subscribe({\n      next: () => {\n        this.goToProfile();\n      },\n      error: () => {\n        this.dataArrived = true;\n      }\n    });\n  }\n\n  onScroll(event: any): void {\n    // Detects when the element has reached the bottom, thx https://stackoverflow.com/a/50038429/12036073\n    if (event.target.offsetHeight + event.target.scrollTop >= event.target.scrollHeight && this._currentPage > 0) {\n      this.loadFeed();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n\n<app-loading *ngIf=\"!dataArrived\"></app-loading>\n\n<main class=\"centered-content scroll-standalone under-navbar flex-col flex-justify-start\" *ngIf=\"dataArrived\">\n\t<form id=\"create-post\" class=\"card flex-col\" [formGroup]=\"createPostFormGroup\" (ngSubmit)=\"createPost()\">\n\t\t<textarea class=\"textarea-new-msg border-faded-slim border-bottom-only padding-dot2\" rows=\"1\" formControlName=\"newPostMessage\" placeholder=\"What's on your mind?\"></textarea>\n\t\t<section class=\"flex-row flex-justify-start align-children-center padding-top-bot-dot5\">\n\t\t\t<div class=\"file-button hover-half-opacity click-effect\">\n\t\t\t\t<img src=\"/assets/icons/tabler-icon-paperclip.svg\">\n\t\t\t\t<input type=\"file\" formControlName=\"fileUpload\" (change)=\"onFileUpload($event)\" multiple>\n\t\t\t</div>\n\t\t</section>\n\t\t<section class=\"flex-row bot-padding-dot6ger\">\n\t\t\t<div *ngFor=\"let file of files\" class=\"form-attachment border-faded-slim flexible flex-row flex-no-wrap flex-center-align-items padding-dot2 margin-top-bot-dot2\">\n\t\t\t\t<div class=\"flexible\">\n\t\t\t\t\t{{ file.name ? file.name : 'Attachment' }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-col hover-half-opacity border-radius-dot2 click-effect\" (click)=\"removeAttachment(file.name)\">\n\t\t\t\t\t<img src=\"/assets/icons/tabler-icon-x.svg\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t\t<button class=\"border-faded-slim padding-dot2 lighter-hover click-effect border-radius-dot3\">\n\t\t\tPost\n\t\t</button>\n\t</form>\n\t<hr class=\"card-hr\">\n\t<section id=\"posts\" (scroll)=\"onScroll($event)\">\n\t\t<div class=\"text-centered\" *ngIf=\"posts.length === 0\">\n\t\t\tNone of your friends have posted anything yet!<br>\n\t\t\tTry refreshing your page!\n\t\t</div>\n\t\t<div *ngFor=\"let friendPost of posts\" class=\"post\">\n\t\t\t<app-post [paramId]=\"friendPost.postId.toString()\"></app-post>\n\t\t</div>\n\t</section>\n</main>\n","import { Guid } from 'guid-typescript';\nimport { Language } from '../language.model';\nimport { Technology } from '../technology.model';\nimport { Friend } from './friend.model';\nimport { Role } from './role.model';\n\nexport class User {\n  private _id : Guid;\n  private _lastName : string;\n  private _firstName : string;\n  private _userName : string;\n  private _email: string;\n  private _profilePictureURL : string;\n  private _languages: Language[];\n  private _technologies: Technology[];\n  private _roles: Role[];\n  private _friends: Friend[];\n\n  constructor(id: Guid, userName: string, firstName: string, lastName: string, email: string, profilePictureURL: string, languages: Language[], technologies: Technology[], roles: Role[], friends: Friend[]) {\n    this.id = id;\n    this.userName = userName;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this._profilePictureURL = profilePictureURL;\n    this.languages = languages;\n    this.technologies = technologies;\n    this.roles = roles;\n  }\n\n  public get id(): Guid {\n    return this._id;\n  }\n  public set id(v: Guid) {\n    this._id = v;\n  }\n\n  public get userName(): string {\n    return this._userName;\n  }\n  public set userName(v: string) {\n    this._userName = v;\n  }\n\n  public get firstName(): string {\n    return this._firstName;\n  }\n  public set firstName(v: string) {\n    this._firstName = v;\n  }\n\n  public get lastName(): string {\n    return this._lastName;\n  }\n  public set lastName(v: string) {\n    this._lastName = v;\n  }\n\n  public get email(): string {\n    return this._email;\n  }\n  public set email(v: string) {\n    this._email = v;\n  }\n\n  public get profilePictureURL(): string {\n    return this._profilePictureURL;\n  }\n  public set profilePictureURL(v: string) {\n    this._profilePictureURL = v;\n  }\n\n  public get languages(): Language[] {\n    return this._languages;\n  }\n  public set languages(v: Language[]) {\n    this._languages = v;\n  }\n\n  public get technologies(): Technology[] {\n    return this._technologies;\n  }\n  public set technologies(v: Technology[]) {\n    this._technologies = v;\n  }\n\n  public get roles(): Role[] {\n    return this._roles;\n  }\n  public set roles(v: Role[]) {\n    this._roles = v;\n  }\n\n  public get friends(): Friend[] {\n    return this._friends;\n  }\n  public set friends(v: Friend[]) {\n    this._friends = v;\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { Language } from 'src/models/language.model';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  /* Requests from session storage */\n\n  createLanguageWithSessionStorageRequest(name: string): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.createLanguageRequest(name, token);\n  }\n\n  getAllLanguagesWithSessionStorageRequest(): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.getAllLanguagesRequest(token);\n  }\n\n  putLanguageWithSessionStorageRequest(langId: Guid, newName: string): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putLanguageRequest(token, langId, newName);\n  }\n\n  deleteLanguageWithSessionStorageRequest(langId: Guid): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deleteLanguageRequest(token, langId);\n  }\n\n  /* Language requests */\n\n  createLanguageRequest(name: string, authToken: string): Observable<object> {\n    const body = {\n      name: name\n    };\n    const options = {\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_LANGUAGE_URL, body, options);\n  }\n\n  getLanguageRequest(langId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', langId.toString()),\n    };\n    return this._http.get(AppConstants.API_LANGUAGE_URL, options);\n  }\n\n  getAllLanguagesRequest(authToken: string): Observable<object> {\n    const options = {\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.get(AppConstants.API_LANGUAGE_URL + '/GetLanguages', options);\n  }\n\n  getFullLanguagesFromIncomplete(givenLanguages: Language[]): Promise<Language[]> {\n    if (givenLanguages.length === 0) {\n      return new Promise(resolve => resolve(givenLanguages));\n    }\n\n    // This accepts language array with incomplete languages, meaning\n    // languages that only have an id, but no name\n    return new Promise(resolve => {\n      const lastGuid = givenLanguages[givenLanguages.length - 1].id;\n\n      // For each language, request his name and assign it\n      for (const lang of givenLanguages) {\n        this.getLanguageRequest(lang.id).subscribe(\n          (result: object) => {\n            // this only assigns the \"name\" property to the language,\n            // because only the name is returned from the request\n            Object.assign(lang, result);\n\n            if (lastGuid === lang.id) {\n              resolve(givenLanguages);\n            }\n          }\n        );\n      }\n    });\n  }\n\n  putLanguageRequest(authToken: string, langId: Guid, newName: string): Observable<object> {\n    const body = {\n      name: newName\n    };\n    const options = {\n      params: new HttpParams().set('Id', langId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_LANGUAGE_URL, body, options);\n  }\n\n  deleteLanguageRequest(authToken: string, langId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('LanguageId', langId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.delete(AppConstants.API_LANGUAGE_URL, options);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { Comment } from 'src/models/comment.model';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  getDefaultComment(): Comment {\n    return new Comment(Guid.createEmpty(), Guid.createEmpty(), '', '', '', '', new Date());\n  }\n\n  /* Requests from session storage */\n\n  createCommentWithSessionStorageRequest(postId: Guid, commentMessage: string): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.createCommentRequest(userId, token, postId, commentMessage);\n  }\n\n  putCommentWithSessionStorageRequest(commentId: Guid, postId: Guid, newMessage: string): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putCommentRequest(userId, token, commentId, postId, newMessage);\n  }\n\n  deleteCommentWithSessionStorage(commentId: Guid): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deleteCommentRequest(commentId, token);\n  }\n\n  /* Comment requests */\n\n  createCommentRequest(userId: Guid, authToken: string, postId: Guid, commentMessage: string): Observable<object> {\n    const body = {\n      postId: postId.toString(),\n      message: commentMessage\n    };\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_COMMENT_URL, body, options);\n  }\n\n  getCommentRequest(id: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('CommentId', id.toString())\n    };\n    return this._http.get(AppConstants.API_COMMENT_URL, options);\n  }\n\n  putCommentRequest(userId: Guid, authToken: string, commentId: Guid, postId: Guid, newMessage: string): Observable<object> {\n    const body = {\n      commentId: commentId.toString(),\n      postId: postId.toString(),\n      newMessage: newMessage\n    };\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_COMMENT_URL, body, options);\n  }\n\n  deleteCommentRequest(commentId: Guid, authToken: string): Observable<object> {\n    const options = {\n      params: new HttpParams().set('CommentId', commentId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.delete(AppConstants.API_COMMENT_URL, options);\n  }\n}\n","import { Guid } from 'guid-typescript';\nimport { Comment } from './comment.model';\nimport { PostComment } from './post-comment.model';\n\nexport class Post {\n  private _postId: Guid;\n  private _creatorFirstName: string;\n  private _creatorLastName: string;\n  private _creatorUsername: string;\n  private _message: string;\n  private _timeCreated: Date;\n  private _comments: PostComment[];\n  private _fileURLs: string[];\n  private _currentRating: number;\n\n  constructor(postId: Guid, creatorFirstName: string, creatorLastName: string, creatorUsername: string, message: string, timeCreated: Date, comments: PostComment[], fileURLs: string[], currentRating: number) {\n    this.postId = postId;\n    this.creatorFirstName = creatorFirstName;\n    this.creatorLastName = creatorLastName;\n    this.creatorUsername = creatorUsername;\n    this.message = message;\n    this.timeCreated = timeCreated;\n    this.comments = comments;\n    this.fileURLs = fileURLs;\n    this.currentRating = currentRating;\n  }\n\n  public get postId(): Guid {\n    return this._postId;\n  }\n  public set postId(v: Guid) {\n    this._postId = v;\n  }\n\n  public get creatorFirstName(): string {\n    return this._creatorFirstName;\n  }\n  public set creatorFirstName(v: string) {\n    this._creatorFirstName = v;\n  }\n\n  public get creatorLastName(): string {\n    return this._creatorLastName;\n  }\n  public set creatorLastName(v: string) {\n    this._creatorLastName = v;\n  }\n\n  public get creatorUsername(): string {\n    return this._creatorUsername;\n  }\n  public set creatorUsername(v: string) {\n    this._creatorUsername = v;\n  }\n\n  public get message(): string {\n    return this._message;\n  }\n  public set message(v: string) {\n    this._message = v;\n  }\n\n  public get timeCreated(): Date {\n    return this._timeCreated;\n  }\n  public set timeCreated(v: Date) {\n    this._timeCreated = v;\n  }\n\n  public get comments(): PostComment[] {\n    return this._comments;\n  }\n  public set comments(v: PostComment[]) {\n    this._comments = v;\n  }\n\n  public get fileURLs(): string[] {\n    return this._fileURLs;\n  }\n  public set fileURLs(v: string[]) {\n    this._fileURLs = v;\n  }\n\n  public get currentRating(): number {\n    return this._currentRating;\n  }\n  public set currentRating(v: number) {\n    this._currentRating = v;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor()\n  { }\n\n  ngOnInit(): void {\n  }\n}\n","<main id=\"content\">\n\tLoading...\n</main>\n","import { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { User } from '../../models/identity/user.model';\nimport { FormGroup } from '@angular/forms';\nimport { AppConstants } from 'src/app/app-constants.module';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from 'src/models/identity/role.model';\nimport { Friend } from 'src/models/identity/friend.model';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  getDefaultUser(): User {\n    return new User(Guid.createEmpty(), '', '', '', '', AppConstants.FALLBACK_PROFILE_ICON, [], [], [], []);\n  }\n\n  /* Requests from session storage */\n\n  getUserFromSessionStorageRequest(): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.getUserRequest(userId, token);\n  }\n\n  addFriendToUserFromSessionStorageRequest(newFriendUserName: string): Observable<object> {\n    const userUserName = this._tokenService.getUsernameFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.addFriendToUserRequest(userUserName, token, newFriendUserName);\n  }\n\n  putUserFromSessionStorageRequest(updateUserFormGroup: FormGroup, userRoles: Role[], userFriends: Friend[]): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putUserRequest(userId, token, updateUserFormGroup, userRoles, userFriends);\n  }\n\n  putProfilePictureFromSessionStorageRequest(newPicture: File): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putProfilePictureRequest(userId, token, newPicture);\n  }\n\n  putBareUserFromSessionStorageRequest(user: User, password: string): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putBareUserRequest(userId, token, user, password);\n  }\n\n  deleteUserFromSessionStorageRequest(): Observable<object> {\n    const userId = this._tokenService.getUserIdFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deleteUserRequest(userId, token);\n  }\n\n  removeFriendFromUserFromSessionStorageRequest(friendToRemoveUserName: string): Observable<object> {\n    const userUserName = this._tokenService.getUsernameFromSessionStorageToken();\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.removeFriendFromUserRequest(userUserName, token, friendToRemoveUserName);\n  }\n\n\n  /* User requests */\n\n  loginUserRequest(loginUserFormGroup: FormGroup): Observable<object> {\n    const body = {\n      UserName: loginUserFormGroup.get('username')?.value,\n      Password: loginUserFormGroup.get('password')?.value\n    };\n    return this._http.post(AppConstants.API_USER_LOGIN_URL, body);\n  }\n\n  registerUserRequest(registerUserFormGroup: FormGroup): Observable<object> {\n    const body = {\n      UserName: registerUserFormGroup.get('username')?.value,\n      Email: registerUserFormGroup.get('email')?.value,\n      FirstName: registerUserFormGroup.get('firstName')?.value,\n      LastName: registerUserFormGroup.get('lastName')?.value,\n      Password: registerUserFormGroup.get('password')?.value\n    };\n    return this._http.post(AppConstants.API_USER_REGISTER_URL, body);\n  }\n\n  addFriendToUserRequest(userUserName: string, authToken: string, newFriendUserName: string): Observable<object> {\n    const body = {\n      newFriendUserName: newFriendUserName\n    };\n    const options = {\n      params: new HttpParams().set('UserName', userUserName),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_USER_URL + '/AddFriend', body, options);\n  }\n\n  getUserRequest(userId: Guid, authToken: string): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.get(AppConstants.API_USER_URL, options);\n  }\n\n  getUserByUsernameRequest(username: string): Observable<object> {\n    const options = {\n      params: new HttpParams().set('UserName', username),\n    };\n    return this._http.get(AppConstants.API_USER_URL + '/GetUser', options);\n  }\n\n  putUserRequest(userId: Guid, authToken: string, updateUserFormGroup: FormGroup, userRoles: Role[], userFriends: Friend[]): Observable<object> {\n    const body = {\n      UserName: updateUserFormGroup.get('username')?.value,\n      Email: updateUserFormGroup.get('email')?.value,\n      FirstName: updateUserFormGroup.get('firstName')?.value,\n      LastName: updateUserFormGroup.get('lastName')?.value,\n      Password: updateUserFormGroup.get('password')?.value,\n      Roles: userRoles,\n      Friends: userFriends,\n      Languages: updateUserFormGroup.get('languages')?.value,\n      Technologies: updateUserFormGroup.get('technologies')?.value\n    };\n    const options = {\n      params: new HttpParams().set('Id', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_USER_URL, body, options);\n  }\n\n  putBareUserRequest(userId: Guid, authToken: string, user: User, password: string): Observable<object> {\n    const body: object = user;\n    Object.assign(body, { password: password });\n    const options = {\n      params: new HttpParams().set('Id', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_USER_URL, body, options);\n  }\n\n  putProfilePictureRequest(userId: Guid, authToken: string, newPicture: File): Observable<object> {\n    const form = new FormData();\n    form.append('picture', newPicture);\n    const options = {\n      params: new HttpParams().set('UserId', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_USER_URL + '/ProfilePicture', form, options);\n  }\n\n  deleteUserRequest(userId: Guid, authToken: string): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', userId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.delete(AppConstants.API_USER_URL, options);\n  }\n\n removeFriendFromUserRequest(userUserName: string, authToken: string, friendToRemoveUserName: string): Observable<object> {\n    const body = {\n      friendUserNameToRemove: friendToRemoveUserName\n    };\n    const options = {\n      params: new HttpParams().set('UserName', userUserName),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_USER_URL + '/RemoveFriend', body, options);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport jwt_decode from 'jwt-decode';\nimport { IJWTPayload } from 'src/interfaces/jwt-payload';\nimport { IUserCredentials } from 'src/interfaces/user-credentials';\nimport { AppConstants } from '../app-constants.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  constructor()\n  { }\n\n  /* Session storage */\n\n  setUserTokenToSessionStorage(response: object): void {\n    const token = JSON.stringify(response);\n    sessionStorage.setItem(AppConstants.SESSION_TOKEN_KEY, token.substr(10, token.length - 12));\n  }\n\n  getTokenFromSessionStorage(): string {\n    return sessionStorage.getItem(AppConstants.SESSION_TOKEN_KEY) ?? '';\n  }\n\n  getUserIdFromSessionStorageToken(): Guid {\n    const jwt: IJWTPayload = {\n      token: this.getTokenFromSessionStorage()\n    };\n    const userCred = jwt_decode<IUserCredentials>(jwt.token);\n\n    return userCred.ID;\n  }\n\n  getUsernameFromSessionStorageToken(): string {\n    const jwt: IJWTPayload = {\n      token: this.getTokenFromSessionStorage()\n    };\n    const userCred = jwt_decode<IUserCredentials>(jwt.token);\n\n    return userCred.Username;\n  }\n\n  logoutUserFromSessionStorage(): void {\n    sessionStorage.removeItem(AppConstants.SESSION_TOKEN_KEY);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Guid } from 'guid-typescript';\nimport { CommentService } from 'src/app/services/comment.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { TokenService } from 'src/app/services/token.service';\nimport { Post } from 'src/models/post.model';\n\n@Component({\n  selector: 'app-post-page',\n  templateUrl: './post-page.component.html',\n  styleUrls: ['./post-page.component.css']\n})\nexport class PostPageComponent implements OnInit {\n  private _title = 'Post';\n  public dataArrived = false;\n  public loggedIn = false;\n  public postId: Guid;\n  public post: Post;\n  public addCommentFormGroup: FormGroup;\n\n  constructor(private _titleService: Title, private _router: Router, private _fb: FormBuilder, private _tokenService: TokenService, private _postService: PostService, private _commentService: CommentService) {\n    this._titleService.setTitle(this._title);\n  }\n\n  ngOnInit(): void {\n    this.loggedIn = this._tokenService.getTokenFromSessionStorage() !== '';\n    this.postId = Guid.parse(this._router.url.substring(6));\n\n    // Gets the post and the logged in user and compares them,\n    // to determine if the current post is made by the user\n    this._postService.getPostRequest(this.postId).subscribe({\n      next: (result: object) => {\n        this.post = result as Post;\n        this.post.fileURLs = Object.values(result)[7];\n\n        this.dataArrived = true;\n      },\n      error: () => {\n        this._router.navigate(['/not-found']);\n      }\n    });\n\n    this.addCommentFormGroup = this._fb.group({\n      newComment: new FormControl('')\n    });\n  }\n\n  addComment(): void {\n    if (!this.loggedIn) {\n      this._router.navigate(['/login']);\n      return;\n    }\n\n    const newComment = this.addCommentFormGroup.get('newComment')?.value;\n    if (newComment !== '' && newComment !== null) {\n      this._commentService.createCommentWithSessionStorageRequest(this.postId, newComment).subscribe({\n        next: () => {\n          this.reloadPage();\n        }\n      });\n    }\n  }\n\n  private reloadPage(): void {\n    this._router.routeReuseStrategy.shouldReuseRoute = () => false;\n    this._router.onSameUrlNavigation = 'reload';\n    this._router.navigate([this._router.url]);\n  }\n}\n","<app-navbar></app-navbar>\n\n<app-loading *ngIf=\"!dataArrived\"></app-loading>\n\n<main class=\"centered-content scroll-standalone under-navbar flex-col\" *ngIf=\"dataArrived\">\n\t<app-post [paramId]=\"postId.toString()\"></app-post>\n\t<form class=\"card flex-col width-full margin-0-top\" [formGroup]=\"addCommentFormGroup\" (ngSubmit)=\"addComment()\">\n\t\t<textarea rows=\"1\" placeholder=\"Add a new comment\" class=\"textarea-new-msg border-faded-slim border-bottom-only padding-dot2 margin-bot-dot5\" formControlName=\"newComment\"></textarea>\n\t\t<button class=\"border-faded-slim padding-dot2 lighter-hover click-effect border-radius-dot3\" type=\"submit\">\n\t\t\tAdd Comment\n\t\t</button>\n\t</form>\n\t<hr class=\"card-hr\">\n\t<section>\n\t\t<div class=\"text-centered\" *ngIf=\"post?.comments?.length === 0\">\n\t\t\tNobody has comented on this post yet!<br>\n\t\t\tTry refreshing the page!\n\t\t</div>\n\t\t<div class=\"comment\" *ngFor=\"let comm of post?.comments\">\n\t\t\t<app-comment [paramId]=\"comm.id.toString()\"></app-comment>\n\t\t</div>\n\t</section>\n</main>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FeedComponent } from './components/feed/feed.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ProfileSettingsComponent } from './components/profile-settings/profile-settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { PostPageComponent } from './components/post-page/post-page.component';\nimport {AdminPanelPageComponent} from './components/admin-panel-page/admin-panel-page.component';\n\nconst routes: Routes = [\n  { path: '', component: FeedComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile/:username', component: ProfileComponent },\n  { path: 'profile/:username/settings', component: ProfileSettingsComponent },\n  { path: 'post/:id', component: PostPageComponent },\n  { path: 'admin-panel', component: AdminPanelPageComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Guid } from 'guid-typescript';\nimport { Observable } from 'rxjs';\nimport { Technology } from 'src/models/technology.model';\nimport { AppConstants } from '../app-constants.module';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnologyService {\n  constructor(private _http: HttpClient, private _tokenService: TokenService)\n  { }\n\n  /* Requests from session storage */\n\n   createTechnologyWithSessionStorageRequest(name: string): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.createtTechnologyRequest(name, token);\n  }\n\n  getAllTechnologiesWithSessionStorageRequest(): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.getAllTechnologiesRequest(token);\n  }\n\n  putTechnologyWithSessionStorageRequest(langId: Guid, newName: string): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.putTechnologyRequest(token, langId, newName);\n  }\n\n  deleteTechnologyWithSessionStorageRequest(langId: Guid): Observable<object> {\n    const token = this._tokenService.getTokenFromSessionStorage();\n\n    return this.deleteTechnologyRequest(token, langId);\n  }\n\n  /* Technology requests */\n\n  createtTechnologyRequest(name: string, authToken: string): Observable<object> {\n    const body = {\n      name: name\n    };\n    const options = {\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.post(AppConstants.API_TECHNOLOGY_URL, body, options);\n  }\n\n  getTechnologyRequest(techId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', techId.toString())\n    };\n    return this._http.get(AppConstants.API_TECHNOLOGY_URL, options);\n  }\n\n  getAllTechnologiesRequest(authToken: string): Observable<object> {\n    const options = {\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.get(AppConstants.API_TECHNOLOGY_URL + '/GetTechnologies', options);\n  }\n\n  getFullTechnologiesFromIncomplete(givenTechnologies: Technology[]): Promise<Technology[]> {\n    if (givenTechnologies.length === 0) {\n      return new Promise(resolve => resolve(givenTechnologies));\n    }\n\n    // This accepts language array with incomplete languages, meaning\n    // languages that only have an id, but no name\n    return new Promise(resolve => {\n      const lastGuid = givenTechnologies[givenTechnologies.length - 1].id;\n\n      // For each language, request his name and assign it\n      for (const tech of givenTechnologies) {\n        this.getTechnologyRequest(tech.id).subscribe(\n          (result: object) => {\n            // this only assigns the \"name\" property to the language,\n            // because only the name is returned from the request\n            Object.assign(tech, result);\n\n            if (lastGuid === tech.id) {\n              resolve(givenTechnologies);\n            }\n          }\n        );\n      }\n    });\n  }\n\n  putTechnologyRequest(authToken: string, langId: Guid, newName: string): Observable<object> {\n    const body = {\n      name: newName\n    };\n    const options = {\n      params: new HttpParams().set('Id', langId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.put(AppConstants.API_TECHNOLOGY_URL, body, options);\n  }\n\n  deleteTechnologyRequest(authToken: string, langId: Guid): Observable<object> {\n    const options = {\n      params: new HttpParams().set('Id', langId.toString()),\n      headers: new HttpHeaders().set('Authorization', 'Bearer ' + authToken)\n    };\n    return this._http.delete(AppConstants.API_TECHNOLOGY_URL, options);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}